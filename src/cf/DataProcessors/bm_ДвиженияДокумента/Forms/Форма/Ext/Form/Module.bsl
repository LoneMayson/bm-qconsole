&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.НастройкаМаксКоличествоСтрок 	= 0;
	ЭтотОбъект.НастройкаМаксШиринаКолонок 		= 60;
	ЭтотОбъект.НастройкаВыделятьОтрицательные 	= Истина;
	ЭтотОбъект.НастройкаПереноситьТекст 		= Истина;
	ЭтотОбъект.НастройкаВыводитьВсеРегистры		= Ложь;
	
    НастроитьФорму();
	
	Если Параметры.Свойство("Документ") Тогда
		ЭтотОбъект.Документ = Параметры.Документ;
	КонецЕсли;		

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если ЗначениеЗаполнено(ЭтотОбъект.Документ) Тогда
		СформироватьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументРезультатВыбор(Элемент, Область, СтандартнаяОбработка)

	Если СтрНачинаетсяС(Область.Имя, "Регистр") Тогда
		ОткрытьФормуРегистра(Область.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	
	МассивТипов = Новый Массив();
	Для Каждого ОМ Из Метаданные.Документы Цикл
		МассивТипов.Добавить(Тип("ДокументСсылка." + ОМ.Имя));
	КонецЦикла;
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Документ", Новый ОписаниеТипов(МассивТипов), , "Документ"));
	ЭтотОбъект.ИзменитьРеквизиты(МассивРеквизитов);
	
	НовЭлемент = Элементы.Добавить("Документ", Тип("ПолеФормы"), Элементы.ГруппаДокумент);
	НовЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовЭлемент.ПутьКДанным = "Документ";
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Документ) Тогда
		Сообщить("Не выбран документ");
		Возврат;
	КонецЕсли;
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	СтруктураРезультата = Новый Структура();                       
	СтруктураРезультата.Вставить("ПараметрыМакета", ПолучитьПараметрыМакета());
	СтруктураРезультата.Вставить("ТабДок", 			Новый ТабличныйДокумент());
	
	МетаданныеДокумента = ЭтотОбъект.Документ.Метаданные();
	
	ТаблицыРегистратора = ПолучитьТаблицыРегистратора(МетаданныеДокумента.Имя, Новый Структура("ЗаполнятьВидСубконто"));
	ДвиженияДокумента = ПолучитьДвиженияДокумента(ЭтотОбъект.Документ, ТаблицыРегистратора);
	Для Каждого СтруктураДвижения Из ДвиженияДокумента Цикл
		ДополнитьСтруктуруРегистра(СтруктураДвижения.СтруктураРегистра);
	КонецЦикла;
	
	КоличествоТаблиц = 0;
	Для Каждого СтруктураДвижения Из ДвиженияДокумента Цикл
		Если СтруктураДвижения.РезультатЗапроса.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		КоличествоТаблиц = КоличествоТаблиц + 1;
	КонецЦикла;
	
	Заголовки = Новый Массив();
	Заголовки.Добавить("Движения документа " + ЭтотОбъект.Документ);	
	Результат_ВывестиЗаголовки(СтруктураРезультата, Заголовки);
	
	ИндексЗапроса = 0;
	Для Каждого СтруктураДвижения Из ДвиженияДокумента Цикл
		Если СтруктураДвижения.РезультатЗапроса.Пустой() Тогда
			Если ЭтотОбъект.НастройкаВыводитьВсеРегистры Тогда
				Результат_ВывестиЗаголовокРегистра(СтруктураРезультата.ТабДок, СтруктураРезультата.ПараметрыМакета, СтруктураДвижения.СтруктураРегистра);
				СтруктураРезультата.ТабДок.Вывести(СтруктураРезультата.ПараметрыМакета.ОбластьОтступ);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		Открыта = Ложь;
		Результат_ВывестиВыборку(СтруктураРезультата, СтруктураДвижения.СтруктураРегистра, СтруктураДвижения.РезультатЗапроса, ИндексЗапроса, Открыта);
		ИндексЗапроса = ИндексЗапроса + 1;
	КонецЦикла;
	
	ЭтотОбъект.ДокументРезультат.Очистить();
	ЭтотОбъект.ДокументРезультат.Вывести(СтруктураРезультата.ТабДок);
	ЭтотОбъект.ДокументРезультат.ФиксацияСверху = Заголовки.Количество() + 1;
	
	Если ЭтотОбъект.НастройкаРазворачиватьГруппировки Тогда
		ЭтотОбъект.ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	ПараметрыОткрытия = Новый Структура(Форма_СтрокаНастроек());
	ЗаполнитьЗначенияСвойств(ПараметрыОткрытия, ЭтотОбъект);
	Оповещение = Новый ОписаниеОповещения("Настройки_Завершение", ЭтотОбъект, Новый Структура());
	ОткрытьФорму(ИмяФормыОбработки("Настройки"), ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор, , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьГруппы(Команда)
	
	ЭтотОбъект.ДокументРезультат.ПоказатьУровеньГруппировокСтрок(1);
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьГруппы(Команда)
	
	ЭтотОбъект.ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРегистра(ИмяТаблицы)
	
	Отбор = Новый Структура("Регистратор", ЭтотОбъект.Документ);
	ПараметрыОткрытия = Новый Структура("Отбор", Отбор);
	ОткрытьФорму(ИмяТаблицы + ".ФормаСписка", ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыМакета()
	
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
	
	ПараметрыМакета = Новый Структура();                           
	ПараметрыМакета.Вставить("ОбластьЗаголовок", 				Макет.ПолучитьОбласть("Заголовок"));
	ПараметрыМакета.Вставить("ОбластьОтступ", 					Макет.ПолучитьОбласть("Отступ"));
	ПараметрыМакета.Вставить("ОбластьШапкаПерваяКолонка", 		Макет.ПолучитьОбласть("ШапкаПерваяКолонка"));		
    ПараметрыМакета.Вставить("ОбластьПерваяКолонка", 			Макет.ПолучитьОбласть("ПерваяКолонка"));	
	ПараметрыМакета.Вставить("ОбластьШапкаПоле", 				Макет.ПолучитьОбласть("ШапкаПоле"));
	ПараметрыМакета.Вставить("ОбластьПоле", 					Макет.ПолучитьОбласть("Поле"));
	ПараметрыМакета.Вставить("ЦветФонаОбычный", 				ПараметрыМакета.ОбластьЗаголовок.Области.Заголовок.ЦветФона);
	ПараметрыМакета.Вставить("ЦветФонаРезультатЗапроса",		Новый Цвет(250, 235, 215));
	ПараметрыМакета.Вставить("ЦветФонаNull", 					Новый Цвет(255, 210, 170));
	ПараметрыМакета.Вставить("ЦветФонаНеопределено", 			Новый Цвет(250, 235, 215));
	ПараметрыМакета.Вставить("ЦветТекстОбычный", 				ЦветаСтиля.ЦветТекстаПоля);
	ПараметрыМакета.Вставить("ЦветТекстОтр", 					ЦветаСтиля.ЦветОтрицательногоЧисла);
	ПараметрыМакета.Вставить("ЦветТекстПриход", 				WebЦвета.Зеленый);
	ПараметрыМакета.Вставить("ЦветТекстРасход", 				WebЦвета.Красный);
	ПараметрыМакета.Вставить("ШрифтЗаголовокРегистра", 			Новый Шрифт(,10));
	ПараметрыМакета.Вставить("ЦветЗаголовокРегистра", 			Новый Цвет(178, 34, 34));
	
	Если ЭтотОбъект.НастройкаПереноситьТекст Тогда
		ПараметрыМакета.ОбластьПоле.Области.Поле.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	КонецЕсли;
	
	Возврат ПараметрыМакета;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Форма_СтрокаНастроек()
	
	Возврат "НастройкаМаксКоличествоСтрок,НастройкаВыделятьОтрицательные,НастройкаМаксШиринаКолонок,НастройкаПереноситьТекст,НастройкаВыводитьВсеРегистры,НастройкаРазворачиватьГруппировки";
	
КонецФункции

&НаКлиенте
Функция ИмяФормыОбработки(Имя)
	
	ТипМетаданных = ?(СтрНачинаетсяС(ЭтотОбъект.ИмяФормы, "ВнешняяОбработка"), "ВнешняяОбработка", "Обработка");
	Возврат ТипМетаданных + ".bm_ДвиженияДокумента.Форма." + Имя;
	
КонецФункции

&НаСервере
Процедура ДополнитьСтруктуруРегистра(СтруктураРегистра)
	
	СтандартныеРеквизиты = Новый Массив();
	Для Каждого ИмяРеквизита Из СтрРазделить("Активность,НомерСтроки,Период,ВидДвижения", ",") Цикл
		Для Каждого ОписаниеИсточник Из СтруктураРегистра.СтандартныеРеквизиты Цикл
			Если ОписаниеИсточник.Имя = ИмяРеквизита Тогда
				Описание = Новый Структура("Имя,Синоним,Тип");
				ЗаполнитьЗначенияСвойств(Описание, ОписаниеИсточник);
				СтандартныеРеквизиты.Добавить(Описание);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	СтруктураРегистра.СтандартныеРеквизиты = СтандартныеРеквизиты;
	
	Для Каждого Коллекция Из СтруктураРегистра.КоллекцииСвойств Цикл
		
		Для Каждого Описание Из СтруктураРегистра[Коллекция] Цикл
			
			Описание.Вставить("Формат", "");
			
			Если Описание.Имя = "Активность" Тогда
				Описание.Синоним = "Акт.";
			ИначеЕсли Описание.Имя = "НомерСтроки" Тогда
				Описание.Синоним = "N";
			ИначеЕсли Описание.Имя = "Период" Тогда
				Описание.Синоним = "Период";
			ИначеЕсли Описание.Имя = "ВидДвижения" Тогда
				Описание.Синоним = "Вид движения";
			КонецЕсли;
			
			Если Описание.Имя = "Активность" Тогда
				Описание.Формат = "БЛ=Ложь; БИ=Истина";
			КонецЕсли;
			
			Если ТипЗнч(Описание.Тип) = Тип("ОписаниеТипов") Тогда
				Если Описание.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти <> 0 Тогда
					КвалификаторыЧисла = Описание.Тип.КвалификаторыЧисла;
					Формат = "ЧЦ=" + КвалификаторыЧисла.Разрядность + "; ЧДЦ=" + КвалификаторыЧисла.РазрядностьДробнойЧасти;
					Описание.Формат = Формат;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#Область РезультатТабличныйДокумент

&НаСервере
Процедура Результат_ВывестиЗаголовки(СтруктураРезультата, Знач Заголовки)
	
	ПараметрыМакета = СтруктураРезультата.ПараметрыМакета;
	
	ОбластьЯчеек = ПараметрыМакета.ОбластьЗаголовок.Область(1,1);
	ОбластьЯчеек.ЦветТекста = ЦветаСтиля.ЦветАкцента;
	ОбластьЯчеек.Шрифт 		= ПараметрыМакета.ШрифтЗаголовокРегистра;
	
	Для Каждого СтрокаЗаголовка Из Заголовки Цикл
		ПараметрыМакета.ОбластьЗаголовок.Параметры.Заголовок = СтрокаЗаголовка;	
		СтруктураРезультата.ТабДок.Вывести(ПараметрыМакета.ОбластьЗаголовок, 0);
	КонецЦикла;
		
	СтруктураРезультата.ТабДок.Вывести(ПараметрыМакета.ОбластьОтступ, 0);
	
КонецПроцедуры

&НаСервере
Процедура Результат_ВывестиЗаголовокРегистра(ТабДок, ПараметрыМакета, СтруктураРегистра, ТекстЗаголовка = "")
	
	Если ПустаяСтрока(ТекстЗаголовка) Тогда
		ТекстЗаголовка = СтруктураРегистра.ТипОМ_Синоним + " " + СтруктураРегистра.ОМ_Имя + " (" + СтруктураРегистра.ОМ_Синоним + ")" + ": 0";
	КонецЕсли;
	
	ПараметрыМакета.ОбластьЗаголовок.Параметры.Заголовок = ТекстЗаголовка;
	
	ОбластьЯчеек = ПараметрыМакета.ОбластьЗаголовок.Область(1,1);
	ОбластьЯчеек.Шрифт 			= ПараметрыМакета.ШрифтЗаголовокРегистра;
	ОбластьЯчеек.ЦветТекста 	= ПараметрыМакета.ЦветЗаголовокРегистра;
	ОбластьЯчеек.Имя 			= СтруктураРегистра.ИмяТаблицы;
	
	ТабДок.Вывести(ПараметрыМакета.ОбластьЗаголовок);
	
КонецПроцедуры

&НаСервере
Процедура Результат_ВывестиВыборку(СтруктураРезультата, Знач СтруктураРегистра, Знач РезультатЗапроса, Знач ИндексЗапроса, Знач Открыта = Истина, Знач ИмяВТ = "")
	
	ТабДок = Новый ТабличныйДокумент();
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	ПараметрыМакета 		= СтруктураРезультата.ПараметрыМакета;
	Выборка 				= РезультатЗапроса.Выбрать();
	КоличествоСтрокВыборки 	= Выборка.Количество();
	КоличествоСтрок			= КоличествоСтрокВыборки; 
	Если ЭтотОбъект.НастройкаМаксКоличествоСтрок > 0 Тогда
		Если КоличествоСтрок > 0 Тогда
			КоличествоСтрок = ?(КоличествоСтрок < ЭтотОбъект.НастройкаМаксКоличествоСтрок, КоличествоСтрок, ЭтотОбъект.НастройкаМаксКоличествоСтрок);
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗаголовка = СтруктураРегистра.ТипОМ_Синоним + " " + СтруктураРегистра.ОМ_Имя + " (" + СтруктураРегистра.ОМ_Синоним + ")" + ": " + КоличествоСтрок;
	Если КоличествоСтрок < КоличествоСтрокВыборки Тогда
		ТекстЗаголовка = ТекстЗаголовка + " из " + КоличествоСтрокВыборки;
	КонецЕсли;

	Результат_ВывестиЗаголовокРегистра(ТабДок, ПараметрыМакета, СтруктураРегистра, ТекстЗаголовка);
	
	ТекущийУровень = ?(Открыта, 0, 1);
	
	Результат_ВывестиТипыКолонок(ТабДок, ПараметрыМакета, СтруктураРегистра, ТекущийУровень, Открыта);
    Результат_ВывестиКолонки(ТабДок, ПараметрыМакета, СтруктураРегистра, ТекущийУровень, Открыта);
	
	НомерСтроки = 1;
	
	Пока Выборка.Следующий() Цикл
		
		УровеньВыборки = Выборка.Уровень();
		ТекущийУровень = УровеньВыборки + ?(Открыта, 0, Истина);
		
		Результат_ВывестиСтроку(ТабДок, ПараметрыМакета, Выборка, СтруктураРегистра, ТекущийУровень, Открыта);
		
		Если ЭтотОбъект.НастройкаМаксКоличествоСтрок > 0 И НомерСтроки >= ЭтотОбъект.НастройкаМаксКоличествоСтрок Тогда
			Прервать;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;		
		
	КонецЦикла;
		
	ТабДок.Вывести(ПараметрыМакета.ОбластьОтступ, 0);	
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	Результат_УстановитьШиринуКолонок(ТабДок);
	
	Результат_ОформитьТипыКолонок(ТабДок, ПараметрыМакета, СтруктураРегистра);
	
	СтруктураРезультата.ТабДок.Вывести(ТабДок);
	
КонецПроцедуры

&НаСервере
Процедура Результат_ВывестиТипыКолонок(ТабДок, ПараметрыМакета, СтруктураРегистра, ТекущийУровень, Открыта)
	
	ТабДок.Вывести(ПараметрыМакета.ОбластьШапкаПерваяКолонка, ТекущийУровень, , Открыта);	
	Для Каждого Коллекция Из СтруктураРегистра.КоллекцииСвойств Цикл
		Для Каждого Описание Из СтруктураРегистра[Коллекция] Цикл
			ПараметрыМакета.ОбластьШапкаПоле.Параметры.Значение = "";
			ТабДок.Присоединить(ПараметрыМакета.ОбластьШапкаПоле, ТекущийУровень, , Открыта);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура Результат_ВывестиКолонки(ТабДок, ПараметрыМакета, СтруктураРегистра, ТекущийУровень, Открыта)
	
	ТабДок.Вывести(ПараметрыМакета.ОбластьШапкаПерваяКолонка, ТекущийУровень, , Открыта);
	
	Для Каждого Коллекция Из СтруктураРегистра.КоллекцииСвойств Цикл
		Для Каждого Описание Из СтруктураРегистра[Коллекция] Цикл
			ПараметрыМакета.ОбластьШапкаПоле.Параметры.Значение  = Описание.Синоним;
			ТабДок.Присоединить(ПараметрыМакета.ОбластьШапкаПоле, ТекущийУровень, , Открыта);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура Результат_ВывестиСтроку(ТабДок, ПараметрыМакета, Выборка, СтруктураРегистра, ТекущийУровень, Открыта)
	
	ТабДок.Вывести(ПараметрыМакета.ОбластьПерваяКолонка, ТекущийУровень);
	
	Для Каждого Коллекция Из СтруктураРегистра.КоллекцииСвойств Цикл
		Для Каждого Описание Из СтруктураРегистра[Коллекция] Цикл
			Результат_ПрименитьОформление(ПараметрыМакета, Выборка[Описание.Имя], Описание);
			ТабДок.Присоединить(ПараметрыМакета.ОбластьПоле, ТекущийУровень);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура Результат_ОформитьТипыКолонок(ТабДок, ПараметрыМакета, СтруктураРегистра, НомерСтроки = 2, Курсор = 2)
	
	Для Каждого Коллекция Из СтруктураРегистра.КоллекцииСвойств Цикл
		Если СтруктураРегистра[Коллекция].Количество() > 0 Тогда		
			ОбластьЯчеек = ТабДок.Область(НомерСтроки, Курсор, НомерСтроки, Курсор + СтруктураРегистра[Коллекция].Количество() - 1);
			ОбластьЯчеек.Объединить();
			ОбластьЯчеек.Текст = Коллекция;
			Если Коллекция = "СтандартныеРеквизиты" Тогда
				ОбластьЯчеек.Текст = "Стандартные реквизиты";
			КонецЕсли;
			Курсор = Курсор + СтруктураРегистра[Коллекция].Количество();
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура Результат_ПрименитьОформление(ПараметрыМакета, Значение, ОписаниеРеквизита)
	
	Если ТипЗнч(Значение) = Тип("РезультатЗапроса") Тогда
		ПараметрыМакета.ОбластьПоле.Параметры.Значение = "<РезультатЗапроса>";
	ИначеЕсли Значение = Null Тогда
		ПараметрыМакета.ОбластьПоле.Параметры.Значение = "<NULL>";
	ИначеЕсли Значение = Неопределено Тогда
		ПараметрыМакета.ОбластьПоле.Параметры.Значение = "<Неопределено>";
	Иначе
		ПараметрыМакета.ОбластьПоле.Параметры.Значение = Значение;
	КонецЕсли;
	Если ТипЗнч(Значение) = Тип("РезультатЗапроса") Тогда
		ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветФона 	= ПараметрыМакета.ЦветФонаРезультатЗапроса;			
	ИначеЕсли Значение = Null Тогда
		ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветФона 	= ПараметрыМакета.ЦветФонаNull;
	ИначеЕсли Значение = Неопределено Тогда
		ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветФона 	= ПараметрыМакета.ЦветФонаНеопределено;				
	Иначе
		ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветФона 	= ПараметрыМакета.ЦветФонаОбычный;
	КонецЕсли;
	Если ТипЗнч(Значение) = Тип("Число") И Значение < 0 И ЭтотОбъект.НастройкаВыделятьОтрицательные Тогда
		ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветТекста = ПараметрыМакета.ЦветТекстОтр;
	ИначеЕсли ОписаниеРеквизита.Имя = "ВидДвижения" Тогда
		Если Значение = ВидДвиженияНакопления.Приход Или Значение = ВидДвиженияБухгалтерии.Дебет Тогда
			ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветТекста = ПараметрыМакета.ЦветТекстПриход;
		ИначеЕсли Значение = ВидДвиженияНакопления.Расход Или Значение = ВидДвиженияБухгалтерии.Кредит Тогда
			ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветТекста = ПараметрыМакета.ЦветТекстРасход;
		КонецЕсли;			
	Иначе
		ПараметрыМакета.ОбластьПоле.Области.Поле.ЦветТекста = ПараметрыМакета.ЦветТекстОбычный;
	КонецЕсли;
	
	ПараметрыМакета.ОбластьПоле.Области.Поле.Формат = ОписаниеРеквизита.Формат;
			
КонецПроцедуры

&НаСервере
Процедура Результат_УстановитьШиринуКолонок(ТабДок, МинШирина = 5, НачСтрока = 2)
	
	КоличествоСтрок = ТабДок.ВысотаТаблицы;
	ТабДок.Область(НачСтрока, , КоличествоСтрок - 1, ).СоздатьФорматСтрок();
	Для НомерКолонки = НачСтрока По ТабДок.ШиринаТаблицы Цикл
		ОбластьЯчеекШапки = ТабДок.Область(НачСтрока, НомерКолонки, НачСтрока, НомерКолонки);
		ШиринаКолонки 	= МинШирина;
		Для НомерСтроки = НачСтрока По КоличествоСтрок Цикл
			ОбластьЯчеек = ТабДок.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
			Ширина = ОбластьЯчеек.Отступ + СтрДлина(ОбластьЯчеек.Текст);
			Если Ширина > ШиринаКолонки Тогда
				ШиринаКолонки = Ширина;
			КонецЕсли;
		КонецЦикла;
		Если ЭтотОбъект.НастройкаМаксШиринаКолонок > 0 И ШиринаКолонки > ЭтотОбъект.НастройкаМаксШиринаКолонок Тогда
			ШиринаКолонки = ЭтотОбъект.НастройкаМаксШиринаКолонок;
		КонецЕсли;
		ОбластьЯчеекШапки.ШиринаКолонки = ШиринаКолонки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияДокумента

&НаСервере
Функция ПолучитьДвиженияДокумента(Знач Регистратор, Знач ТаблицыРегистратора)
	
	Результат = Новый Массив();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.Текст = ПолучитьТекстЗапросаКТаблицам(ТаблицыРегистратора);
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ИндексЗапроса = 0;
	Для Каждого СтруктураРегистра Из ТаблицыРегистратора Цикл
		РезультатЗапроса  = ПакетЗапросов[ИндексЗапроса];
		СтруктураДвижения = Новый Структура("СтруктураРегистра, РезультатЗапроса", СтруктураРегистра, РезультатЗапроса);
		Результат.Добавить(СтруктураДвижения);
		ИндексЗапроса = ИндексЗапроса + 1;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаКТаблицам(Знач ТаблицыРегистратора)
	
	ТекстЗапроса = "";
	
	ПерваяСтрока = Истина;
	Для Каждого СтруктураРегистра Из ТаблицыРегистратора Цикл
		Если СтруктураРегистра.ТипОМ_Имя = "РегистрБухгалтерии" Тогда
			ОчереднойТекст = ПолучитьТекстЗапросаДвиженияССубконто(СтруктураРегистра.ИмяТаблицы);
		Иначе
			ОчереднойТекст = ПолучитьТекстЗапросаКТаблице(СтруктураРегистра.ИмяТаблицы);
		КонецЕсли;
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
			ТекстЗапроса = ОчереднойТекст;
		Иначе
			ТекстЗапроса = ТекстЗапроса +
			"
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" + ОчереднойТекст;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаКТаблице(Знач ИмяТаблицы)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.*
	|ИЗ
	|	" + ИмяТаблицы + " КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаДвиженияССубконто(Знач ИмяТаблицы)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.*
	|ИЗ
	|	" + ИмяТаблицы + ".ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК Таблица";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Библиотека

&НаСервере
Функция ПолучитьТаблицыРегистратора(Знач ИмяДокумента, Знач ДополнительныеПараметры = Неопределено)
	
	Результат = Новый Массив();
	
	ТЗ = Новый ТаблицаЗначений();   
	ТЗ.Колонки.Добавить("ОМ_Имя");
	ТЗ.Колонки.Добавить("ОМ");
	
	Для Каждого СтруктураТипаРегистра Из ПолучитьТипыРегистров() Цикл
		КОМ = Метаданные[СтруктураТипаРегистра["ТипОМ_Имя_Мнч"]];
		ТЗ.Очистить();
		Для Каждого ОМ Из Метаданные.Документы[ИмяДокумента].Движения Цикл		
			Если КОМ.Содержит(ОМ) Тогда
				НовСтр = ТЗ.Добавить();
				НовСтр.ОМ_Имя 	= ОМ.Имя;
				НовСтр.ОМ 		= ОМ;			
			КонецЕсли;
		КонецЦикла;   
		ТЗ.Сортировать("ОМ_Имя");
		Для Каждого СтрокаТЗ Из ТЗ Цикл
			СтруктураРегистра = ПолучитьСтруктуруРегистра(СтрокаТЗ.ОМ, ДополнительныеПараметры);
			Результат.Добавить(СтруктураРегистра);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьТипыРегистров()
	
	ТипыРегистров = Новый Массив();
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрСведений", 		"РегистрыСведений"));
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрНакопления", 	"РегистрыНакопления"));
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрРасчета", 		"РегистрыРасчета"));
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрБухгалтерии", 	"РегистрыБухгалтерии"));
	
	Возврат ТипыРегистров;
	
КонецФункции

&НаСервере
Функция МассивСтруктур_Найти(МассивСтруктур, Значение, Ключ)
	
	Для Каждого Структура Из МассивСтруктур Цикл
		Если Структура[Ключ] = Значение Тогда
			Возврат Структура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруРегистра(Знач ОМ, Знач ДополнительныеПараметры = Неопределено)
	
	Результат = Новый Структура("ТипОМ_Имя,ТипОМ_Синоним,ОМ_Имя,ОМ_Синоним,ИмяТаблицы,КоллекцииСвойств,СтандартныеРеквизиты,Измерения,Ресурсы,Реквизиты");
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура();
	КонецЕсли;
	
	Результат.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Если Метаданные.РегистрыСведений.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрСведений";
		Результат.ТипОМ_Синоним = "Регистр сведений";
	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрНакопления";
		Результат.ТипОМ_Синоним = "Регистр накопления";
	ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрБухгалтерии";
		Результат.ТипОМ_Синоним = "Регистр бухгалтерии";
		Результат.Вставить("Корреспонденция", ОМ.Корреспонденция);
		Результат.Вставить("МаксКоличествоСубконто", ОМ.ПланСчетов.МаксКоличествоСубконто);
	ИначеЕсли Метаданные.РегистрыРасчета.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрРасчета";
		Результат.ТипОМ_Синоним = "Регистр расчета";
	КонецЕсли;
	
	Результат.ОМ_Имя 		= ОМ.Имя;
	Результат.ОМ_Синоним 	= ОМ.Синоним;
	Результат.ИмяТаблицы 	= Результат.ТипОМ_Имя + "." + Результат.ОМ_Имя;
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,Ресурсы,Реквизиты", ",");
	
	Для Каждого Коллекция Из Результат.КоллекцииСвойств Цикл		
		Результат[Коллекция] = Новый Массив();
		Для Каждого Элемент Из ОМ[Коллекция] Цикл		
			Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя, Элемент.Синоним, Элемент.Тип);
			Если Результат.ТипОМ_Имя = "РегистрБухгалтерии" И (Коллекция = "Измерения" Или Коллекция = "Ресурсы") Тогда
				Описание.Вставить("Балансовый", Элемент.Балансовый);
			КонецЕсли;
			Результат[Коллекция].Добавить(Описание);
		КонецЦикла;	
	КонецЦикла;
	
	Если Результат.ТипОМ_Имя = "РегистрБухгалтерии" Тогда
		Если Результат.Корреспонденция Тогда
			ДополнитьСтруктуруРегистраБухгалтерииБалансИстина(Результат, ОМ);
		Иначе
			ДополнитьСтруктуруРегистраБухгалтерииБалансЛожь(Результат, ОМ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

&НаСервере
Процедура ДополнитьСтруктуруРегистраБухгалтерииБалансИстина(Результат, Знач ОМ)
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,ИзмеренияДт,СчетДт,РесурсыДт,ИзмеренияКт,СчетКт,РесурсыКт,Ресурсы,Реквизиты", ",");
	Результат.Вставить("Измерения", Новый Массив());
	Результат.Вставить("Ресурсы", Новый Массив());
	Результат.Вставить("ИзмеренияДт", Новый Массив());
	Результат.Вставить("СчетДт", Новый Массив());
	Результат.Вставить("РесурсыДт", Новый Массив());
	Результат.Вставить("ИзмеренияКт", Новый Массив());
	Результат.Вставить("СчетКт", Новый Массив());
	Результат.Вставить("РесурсыКт", Новый Массив());
	
	Для Каждого Коллекция Из СтрРазделить("Измерения,Ресурсы", ",") Цикл
		Для Каждого Элемент Из ОМ[Коллекция] Цикл		
			Если Элемент.Балансовый Тогда
				Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя, Элемент.Синоним, Элемент.Тип);
				Результат[Коллекция].Добавить(Описание);
			Иначе
				Для Каждого ВидДвижения Из СтрРазделить("Дт,Кт", ",") Цикл
					Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя + ВидДвижения, Элемент.Синоним + " " + ВидДвижения, Элемент.Тип);
					Результат[Коллекция + ВидДвижения].Добавить(Описание);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Для Каждого ВидДвижения Из СтрРазделить("Дт,Кт", ",") Цикл
		Счет = "Счет" + ВидДвижения;
		Описание = Новый Структура("Имя,Синоним,Тип", Счет, Счет, Неопределено);
		Результат[Счет].Добавить(Описание);
		Для Итер = 1 По Результат.МаксКоличествоСубконто Цикл
			Если Результат.ДополнительныеПараметры.Свойство("ЗаполнятьВидСубконто") Тогда
				ВидСубконто = "ВидСубконто" + ВидДвижения + Итер;				
				Описание = Новый Структура("Имя,Синоним,Тип", ВидСубконто, ВидСубконто, Неопределено);
				Результат[Счет].Добавить(Описание);
			КонецЕсли;
			Субконто 	= "Субконто" + ВидДвижения + Итер;
			Описание = Новый Структура("Имя,Синоним,Тип", Субконто, Субконто, Неопределено);
			Результат[Счет].Добавить(Описание);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьСтруктуруРегистраБухгалтерииБалансЛожь(Результат, Знач ОМ)
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,Счет,Ресурсы,Реквизиты", ",");
	Результат.Вставить("Счет", Новый Массив());
	
	Описание = Новый Структура("Имя,Синоним,Тип", "Счет", "Счет", Неопределено);
	Результат.Счет.Добавить(Описание);
	
	Для Итер = 1 По Результат.МаксКоличествоСубконто Цикл
		Если Результат.ДополнительныеПараметры.Свойство("ЗаполнятьВидСубконто") Тогда
			Описание = Новый Структура("Имя,Синоним,Тип", "ВидСубконто" + Итер, "ВидСубконто" + Итер, Неопределено);
			Результат.Счет.Добавить(Описание);
		КонецЕсли;
		Описание = Новый Структура("Имя,Синоним,Тип", "Субконто" + Итер, "Субконто" + Итер, Неопределено);
		Результат.Счет.Добавить(Описание);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти





