#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Описание,Настройки,Ссылка");
	
	ВыражениеТипа = ЭтотОбъект.Описание.ИмяЕдч + "Объект." + ЭтотОбъект.Описание.Имя;
	ДобавляемыеРеквизиты = Новый Массив();
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОбъектФормы", Новый ОписаниеТипов(ВыражениеТипа)));
	ЭтотОбъект.ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	Обт = РеквизитФормыВЗначение("Объект");	
	ТаблицыРегистратора = Обт.ТаблицыРегистратора(ЭтотОбъект.Описание.Имя);
	Для Каждого СтруктураРегистра Из ТаблицыРегистратора Цикл
		НовСтр = ЭтотОбъект.ОписаниеТаблиц.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, СтруктураРегистра);
		НовСтр.Описание = Обт.ОписаниеОбъектаМетаданных(СтруктураРегистра, Новый Структура("ЗаполнятьВидСубконто", Ложь));
	КонецЦикла;
	
	НастроитьФорму();
	
	ОбъектИнфобазы = ЭтотОбъект.Ссылка.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ОбъектИнфобазы, "ОбъектФормы");
	ЗаполнитьСтатус();
	
	СоздатьЭлементыТЧ();
	ПрочитатьОбъект();
	
	УпрФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЭтотОбъект.Модифицированность Тогда
		Отказ = Истина;
		Если Не ЗавершениеРаботы Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ВопросОСохранении_Завершение", ЭтотОбъект, Новый Структура()), "Данные были изменены. Остаться в форме?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура СсылкаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыСтрокиПриАктивизацииЯчейки(Элемент)

	ТекДанные = Элементы.РеквизитыСтроки.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Элемент.ТекущийЭлемент.ОграничениеТипа = ТекДанные.Тип;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыСтрокиЗначениеПриИзменении(Элемент)

	ТекДанные = Элементы.РеквизитыСтроки.ТекущиеДанные;
	ИмяПоля = ТекДанные.Имя;
	Значение = ТекДанные.Значение;
	
	ТаблицаФормы = Элементы["ТаблицаТЧ_" + ЭтотОбъект.ТекИмяТЧ];
	ТекДанные = ТаблицаФормы.ТекущиеДанные;	
	ТекДанные[ИмяПоля] = Значение;
	
	ИскомаяСтрока = ЭтотОбъект.ТабличныеЧасти.НайтиСтроки(Новый Структура("Имя", ЭтотОбъект.ТекИмяТЧ))[0];
	ИскомаяСтрока.Пометка = Истина;
	
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныеЧастиПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ТабличныеЧасти.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницыТабличныеЧасти.ТекущаяСтраница = Элементы["ГруппаТЧ_" + ТекДанные.Имя];
	
	ЭтотОбъект.ТекИмяТЧ = ТекДанные.Имя;
	
	Если ЭтотОбъект.Настройки.НастройкаВыводитьРеквизитыСтроки Тогда
		ЗаполнитьРеквизитыСтроки("ТабличныеЧасти");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныеЧастиПометкаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормыПриАктивизацииСтроки(Элемент)
	
	Если ЭтотОбъект.Настройки.НастройкаВыводитьРеквизитыСтроки Тогда
		ЗаполнитьРеквизитыСтроки("ТаблицаФормы");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормыПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока Тогда
		ОбновитьКоличествоСтрокТЧ(ЭтотОбъект, ЭтотОбъект.ТекИмяТЧ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		
		ИскомаяСтрока = ЭтотОбъект.ТабличныеЧасти.НайтиСтроки(Новый Структура("Имя", ЭтотОбъект.ТекИмяТЧ))[0];
		ИскомаяСтрока.Пометка = Истина;	
		ЭтотОбъект.Модифицированность = Истина;
	
		Если ЭтотОбъект.Настройки.НастройкаВыводитьРеквизитыСтроки Тогда
			ЗаполнитьРеквизитыСтроки("ТаблицаФормы");
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаФормыПослеУдаления(Элемент)
	
	ИскомаяСтрока = ЭтотОбъект.ТабличныеЧасти.НайтиСтроки(Новый Структура("Имя", ЭтотОбъект.ТекИмяТЧ))[0];
	ИскомаяСтрока.Пометка = Истина;	
	ЭтотОбъект.Модифицированность = Истина;
	
	ОбновитьКоличествоСтрокТЧ(ЭтотОбъект, ЭтотОбъект.ТекИмяТЧ);
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаПрочитать(Команда)
	
	ПрочитатьОбъект();
	
	ЭтотОбъект.Модифицированность = Ложь;
	
	Если ЭтотОбъект.Настройки.НастройкаВыводитьРеквизитыСтроки Тогда
		ЗаполнитьРеквизитыСтроки("ТаблицаФормы");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	ЗаписатьОбъект();
	
	ЭтотОбъект.Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПрочитатьТекущийРегистр(Команда)
	
	ТекДанные = Элементы.ТабличныеЧасти.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПрочитатьТекущийРегистр(ТекДанные.ПолучитьИдентификатор());

	Если ЭтотОбъект.Настройки.НастройкаВыводитьРеквизитыСтроки Тогда
		ЗаполнитьРеквизитыСтроки("ТаблицаФормы");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьТекущийРегистр(Идентификатор)
	
	ТекДанные = ЭтотОбъект.ТабличныеЧасти.НайтиПоИдентификатору(Идентификатор);	
	НЗ = РеквизитФормыВЗначение("ОбъектФормы.Движения." + ТекДанные.Имя);
	НЗ.Прочитать();
	ЗначениеВРеквизитФормы(НЗ, "ОбъектФормы.Движения." + ТекДанные.Имя);
	ТекДанные.Количество = НЗ.Количество();
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьТекущийРегистр(Команда)
	
	ТекДанные = Элементы.ТабличныеЧасти.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Не ТекДанные.Пометка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьТекущийРегистр(ТекДанные.ПолучитьИдентификатор());
	
	Если ЭтотОбъект.Модифицированность Тогда
		ЭтотОбъект.Модифицированность = (ЭтотОбъект.ТабличныеЧасти.НайтиСтроки(Новый Структура("Пометка", Истина)).Количество() > 0);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТекущийРегистр(Идентификатор)

	ТекДанные = ЭтотОбъект.ТабличныеЧасти.НайтиПоИдентификатору(Идентификатор);	
	НЗ = РеквизитФормыВЗначение("ОбъектФормы.Движения." + ТекДанные.Имя);
	Если ЭтотОбъект.ОбменДаннымиЗагрузка Тогда
		НЗ.ОбменДанными.Загрузка = Истина;
	КонецЕсли;
	НЗ.Записать();	
	ТекДанные.Пометка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьЗначение(Команда)
	
	ВыборЗначения_ВыбратьЗначение();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьЗначение(Команда)

	ВыборЗначения_ОткрытьЗначение();
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаРеквизитыСтрокиВыбратьЗначение(Команда)

	ВыборЗначения_ВыбратьЗначение("РеквизитыСтроки");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРеквизитыСтрокиОткрытьЗначение(Команда)
	
	ВыборЗначения_ОткрытьЗначение("РеквизитыСтроки");
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаРедактироватьОбъект(Команда)
	
	Элементы.ФормаКомандаРедактироватьОбъект.Пометка = Не Элементы.ФормаКомандаРедактироватьОбъект.Пометка;
	УпрФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ЧтениеЗаписьОбъекта

&НаСервере
Процедура ПрочитатьОбъект()
		
	Для Каждого СтрокаТЗ Из ЭтотОбъект.ОписаниеТаблиц Цикл
		
		НЗ = РеквизитФормыВЗначение("ОбъектФормы.Движения." + СтрокаТЗ.Имя);
		НЗ.Прочитать();
		ЗначениеВРеквизитФормы(НЗ, "ОбъектФормы.Движения." + СтрокаТЗ.Имя);
		
	КонецЦикла;
	
	ОбновитьКоличествоСтрокТЧ(ЭтотОбъект);
		
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОбъект()
	
	Для Каждого СтрокаТЗ Из ЭтотОбъект.ТабличныеЧасти Цикл
		
		Если Не СтрокаТЗ.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		НЗ = РеквизитФормыВЗначение("ОбъектФормы.Движения." + СтрокаТЗ.Имя);
		Если ЭтотОбъект.ОбменДаннымиЗагрузка Тогда
			НЗ.ОбменДанными.Загрузка = Истина;
		КонецЕсли;
		НЗ.Записать();
		
		СтрокаТЗ.Пометка = Ложь;
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатус()
	
	Если ЭтотОбъект["ОбъектФормы"].Проведен Тогда
		Элементы.ДекорацияСтатус.Картинка = Элементы.ДекорацияПроведен.Картинка;
	ИначеЕсли ЭтотОбъект["ОбъектФормы"].ПометкаУдаления Тогда
		Элементы.ДекорацияСтатус.Картинка = Элементы.ДекорацияПометкаУдаления.Картинка;
	Иначе
		Элементы.ДекорацияСтатус.Картинка = Элементы.ДекорацияДокумент.Картинка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыСтроки(Источник)
	
	ЭтотОбъект.РеквизитыСтроки.Очистить();
	
	ТаблицаФормы = Элементы["ТаблицаТЧ_" + ЭтотОбъект.ТекИмяТЧ];
	ТекДанные = ТаблицаФормы.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеТаблицы = ЭтотОбъект.ОписаниеТаблиц.НайтиСтроки(Новый Структура("Имя", ЭтотОбъект.ТекИмяТЧ))[0].Описание;
	
	Для Каждого ИмяКоллекции Из ОписаниеТаблицы.Реквизиты.Имена Цикл
		ТекКоллекция = ОписаниеТаблицы.Реквизиты.ГруппыРеквизитовМассив[ИмяКоллекции];
		Если ИмяКоллекции = "СтандартныеРеквизиты" Тогда
			ТекКоллекция = ОписаниеТаблицы.СтдРекНЗ;
		КонецЕсли;
		Для Каждого ЭлемОписание Из ТекКоллекция Цикл
			НовСтр = ЭтотОбъект.РеквизитыСтроки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, ЭлемОписание);
			Если ЭлемОписание.Свойство("ЭтоХранилищеЗначения") И ЭлемОписание.ЭтоХранилищеЗначения Тогда
				НовСтр.Значение = "<Хранилище значения>";
				НовСтр.ТипЗначения = "Хранилище значения";
			Иначе
				НовСтр.Значение = ТекДанные[ЭлемОписание.Имя];
				НовСтр.ТипЗначения = ТипЗнч(НовСтр.Значение);
			КонецЕсли;
			НовСтр.ИмяКоллекции = ИмяКоллекции;
			Если ИмяКоллекции = "Реквизиты" Или ИмяКоллекции = "СтандартныеРеквизиты" Тогда
				НовСтр.Картинка = БиблиотекаКартинок.Реквизит;
			ИначеЕсли СтрНачинаетсяС(ИмяКоллекции, "Измерения") Или СтрНачинаетсяС(ИмяКоллекции, "Счет") Тогда
				НовСтр.Картинка = БиблиотекаКартинок.Измерение;
			ИначеЕсли СтрНачинаетсяС(ИмяКоллекции, "Ресурсы") Тогда
				НовСтр.Картинка = БиблиотекаКартинок.Ресурс;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВыбратьОткрытьЗначение

&НаКлиенте
Процедура ВыборЗначения_ВыбратьЗначение(Источник = "")
	
	ДополнительныеПараметры = ВыборЗначения_ПараметрыРедактирования(Источник);
	Если ДополнительныеПараметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивТипов = ВыборЗначения_МассивТиповФильтр(ДополнительныеПараметры.ОписаниеТипов.Типы());
	Если МассивТипов.Количество() = 0 Тогда
		Возврат;
	ИначеЕсли МассивТипов.Количество() = 1 Тогда
		ВыборЗначения_ВыборТипаЗначенияЗавершение(Новый Структура("Значение", МассивТипов[0]), ДополнительныеПараметры);
	Иначе
		СписокЗначений = Новый СписокЗначений();
		СписокЗначений.ЗагрузитьЗначения(МассивТипов);
		Оповещение = Новый ОписаниеОповещения("ВыборЗначения_ВыборТипаЗначенияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		СписокЗначений.ПоказатьВыборЭлемента(Оповещение, "Выберите тип");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения_ВыборТипаЗначенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Тип = Результат.Значение;
	
	Если Тип = Тип("УникальныйИдентификатор") Тогда
		ПараметрыОткрытия = Новый Структура("УИД", ДополнительныеПараметры.Значение);
		Оповещение = Новый ОписаниеОповещения("ВыборЗначения_ВыбратьЗначениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ОткрытьФорму(ИмяФормыОбработки("КонструкторУИД"), ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор,,, Оповещение);
	ИначеЕсли Тип = Тип("Строка") Тогда                                       
		Оповещение = Новый ОписаниеОповещения("ВыборЗначения_ВыбратьЗначениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВводСтроки(Оповещение, ДополнительныеПараметры.Значение,,, ДополнительныеПараметры.МногострочныйРежим);
	Иначе
		ПараметрыОткрытия = Новый Структура("Описание,Настройки,РежимВыбора");
		ПараметрыОткрытия.Описание = ОписаниеОбъектаМетаданных(Тип);
		ПараметрыОткрытия.Настройки = ЭтотОбъект.Настройки;
		ПараметрыОткрытия.РежимВыбора = Истина;
		Оповещение = Новый ОписаниеОповещения("ВыборЗначения_ВыбратьЗначениеЗавершение", ЭтотОбъект, ДополнительныеПараметры); 
		ОткрытьФорму(ИмяФормыОбработки("ФормаСписка"), ПараметрыОткрытия, ЭтотОбъект, "РежимВыбора" + ПараметрыОткрытия.Описание.ОсновнаяТаблица,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения_ВыбратьЗначениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Источник = "РеквизитыСтроки" Тогда
		ТекДанные = Элементы.РеквизитыСтроки.ТекущиеДанные;
		ТекДанные.Значение = Результат;
		ТаблицаФормы = Элементы["ТаблицаТЧ_" + ДополнительныеПараметры.ИмяТЧ];
		ТекДанные = ТаблицаФормы.ТекущиеДанные;
		ТекДанные[ДополнительныеПараметры.ИмяПоля] = Результат;
		ИскомаяСтрока = ЭтотОбъект.ТабличныеЧасти.НайтиСтроки(Новый Структура("Имя", ДополнительныеПараметры.ИмяТЧ))[0];
		ИскомаяСтрока.Пометка = Истина;
	Иначе                                              
		ТаблицаФормы = Элементы["ТаблицаТЧ_" + ДополнительныеПараметры.ИмяТЧ];
		ТекДанные = ТаблицаФормы.ТекущиеДанные;
		ТекДанные[ДополнительныеПараметры.ИмяПоля] = Результат;
		ИскомаяСтрока = ЭтотОбъект.ТабличныеЧасти.НайтиСтроки(Новый Структура("Имя", ДополнительныеПараметры.ИмяТЧ))[0];
		ИскомаяСтрока.Пометка = Истина;
		Если ЭтотОбъект.Настройки.НастройкаВыводитьРеквизитыСтроки Тогда
			ЗаполнитьРеквизитыСтроки("ТаблицаФормы");
		КонецЕсли;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыборЗначения_МассивТиповФильтр(МассивТипов)
	
	Результат = Новый Массив();
	
	Для Каждого Тип Из МассивТипов Цикл
		Если ЭтоСсылка(Тип) Или Тип = Тип("УникальныйИдентификатор") Или Тип = Тип("Строка") Тогда
			Результат.Добавить(Тип);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыборЗначения_ОткрытьЗначение(Источник = "")
	
	ДополнительныеПараметры = ВыборЗначения_ПараметрыРедактирования();
	Если ДополнительныеПараметры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Источник = "РеквизитыСтроки" Тогда
		ТекДанные = Элементы.РеквизитыСтроки.ТекущиеДанные;
		Значение = ТекДанные.Значение;
	ИначеЕсли ДополнительныеПараметры.Источник = "Реквизиты" Тогда
		ТекДанные = Элементы.РеквизитыОбъекта.ТекущиеДанные;
		Значение = ТекДанные.Значение;
	ИначеЕсли ДополнительныеПараметры.Источник = "ТЧ" Тогда                                              
		ТаблицаФормы = Элементы["ТаблицаТЧ_" + ДополнительныеПараметры.ИмяТЧ];
		ТекДанные = ТаблицаФормы.ТекущиеДанные;
		Значение = ТекДанные[ДополнительныеПараметры.ИмяПоля];
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗначениеТип = ТипЗнч(Значение);
	
	Если ЗначениеТип = Тип("Строка") Тогда
		Оповещение = Новый ОписаниеОповещения("ВыборЗначения_ОткрытьЗначениеЗавершение", ЭтотОбъект, Новый Структура());
		ПоказатьВводСтроки(Оповещение, Значение, "Строка",, ДополнительныеПараметры.МногострочныйРежим);
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоСсылка(ЗначениеТип) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("Описание,Настройки,Ссылка");
	ПараметрыОткрытия.Описание = ОписаниеОбъектаМетаданных(ЗначениеТип);
	ПараметрыОткрытия.Настройки = ЭтотОбъект.Настройки;
	ПараметрыОткрытия.Ссылка = Значение;
	
	ОткрытьФорму(ИмяФормыОбработки("ФормаОбъекта"), ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначения_ОткрытьЗначениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

&НаКлиенте
Функция ВыборЗначения_ПараметрыРедактирования(Источник = "")
	
	Если Источник = "РеквизитыСтроки" Тогда
		ТекДанные = Элементы.РеквизитыСтроки.ТекущиеДанные;
		Если ТекДанные = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		ИмяТЧ = ЭтотОбъект.ТекИмяТЧ;
		ИмяПоля = ТекДанные.Имя;
		Значение = ТекДанные.Значение;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаТабличныеЧасти Тогда
		Источник = "ТЧ";
		ИмяТЧ = ЭтотОбъект.ТекИмяТЧ;
		ТаблицаФормы = Элементы["ТаблицаТЧ_" + ИмяТЧ];
		ТекДанные = ТаблицаФормы.ТекущиеДанные;
		Если ТекДанные = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		ИмяПоля = СтрЗаменить(ТаблицаФормы.ТекущийЭлемент.Имя, "ТаблицаТЧ_" + ИмяТЧ, "");
		Значение = ТекДанные[ИмяПоля];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеТаблицы = ЭтотОбъект.ОписаниеТаблиц.НайтиСтроки(Новый Структура("Имя", ИмяТЧ))[0].Описание;
	Инфо = ИнформацияОПолеРегистра(ОписаниеТаблицы, ИмяПоля);
	ИмяКоллекции = Инфо.ИмяКоллекции;
	ЭлемОписание = Инфо.Элем;
	ОписаниеТипов = ЭлемОписание.Тип;
	МногострочныйРежим = (ЭлемОписание.Свойство("МногострочныйРежим") И ЭлемОписание.МногострочныйРежим);
	МногострочныйРежим = (МногострочныйРежим Или ОписаниеТипов.КвалификаторыСтроки.Длина = 0);
	
	Результат = Новый Структура("Источник,ИмяТЧ,ИмяПоля,Значение,ОписаниеТипов,МногострочныйРежим", Источник, ИмяТЧ, ИмяПоля, Значение, ОписаниеТипов, МногострочныйРежим);
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИнформацияОПолеРегистра(Знач ОписаниеРегистра, Знач Имя)
	
	Для Каждого КиЗ Из ОписаниеРегистра.Реквизиты.ГруппыРеквизитовСтруктура Цикл
		КоллекцияСтруктура = КиЗ.Значение;
		Если КоллекцияСтруктура.Свойство(Имя) Тогда
			Возврат Новый Структура("ИмяКоллекции,Элем", КиЗ.Ключ, КоллекцияСтруктура[Имя]);
		КонецЕсли;
	КонецЦикла;   
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область ЭлементыФормы

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьКоличествоСтрокТЧ(Знач Форма, Знач ИмяТЧ = "")
	
	Если ИмяТЧ = "" Тогда
		Для Каждого ИскомаяСтрока Из Форма.ТабличныеЧасти Цикл
			ИскомаяСтрока.Пометка = Ложь;
			ИскомаяСтрока.Количество = Форма["ОбъектФормы"].Движения[ИскомаяСтрока.Имя].Количество();
		КонецЦикла;
	Иначе
		МассивСтрок = Форма.ТабличныеЧасти.НайтиСтроки(Новый Структура("Имя", ИмяТЧ));
		ИскомаяСтрока = МассивСтрок[0];
		ИскомаяСтрока.Количество = Форма["ОбъектФормы"].Движения[ИмяТЧ].Количество();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыТЧ()
	
	Для Каждого СтрокаТЗ Из ЭтотОбъект.ОписаниеТаблиц Цикл
		
		ИмяТаблицы = СтрокаТЗ.Имя;
		
		НовСтр = ЭтотОбъект.ТабличныеЧасти.Добавить();
		НовСтр.Имя = ИмяТаблицы;
		НовСтр.Картинка = БиблиотекаКартинок[СтрокаТЗ.ИмяЕдч];
	
		ГруппаФормы = Элементы.Добавить("ГруппаТЧ_" + ИмяТаблицы, Тип("ГруппаФормы"), Элементы.ГруппаСтраницыТабличныеЧасти);
		ГруппаФормы.Вид = ВидГруппыФормы.Страница;
		ГруппаФормы.Заголовок = ИмяТаблицы;
		ГруппаФормы.ПутьКДаннымЗаголовка = "ОбъектФормы.Движения." + ИмяТаблицы + ".КоличествоСтрок";
		ГруппаФормы.Картинка = БиблиотекаКартинок[СтрокаТЗ.ИмяЕдч];
		
		ТаблицаФормы = Элементы.Добавить("ТаблицаТЧ_" + ИмяТаблицы, Тип("ТаблицаФормы"), ГруппаФормы);
		ТаблицаФормы.ПутьКДанным = "ОбъектФормы.Движения." + ИмяТаблицы;
		
		Для Каждого ИмяКоллекции Из СтрокаТЗ.Описание.Реквизиты.Имена Цикл
			ТекКоллекция = СтрокаТЗ.Описание.Реквизиты.ГруппыРеквизитовМассив[ИмяКоллекции];
			Если ИмяКоллекции = "СтандартныеРеквизиты" Тогда
				ТекКоллекция = СтрокаТЗ.Описание.СтдРекНЗ;
			КонецЕсли;
			Для Каждого ЭлемОписание Из ТекКоллекция Цикл
				Поле = Элементы.Добавить("ТаблицаТЧ_" + ИмяТаблицы + ЭлемОписание.Имя, Тип("ПолеФормы"), ТаблицаФормы);
				Поле.ПутьКДанным = "ОбъектФормы.Движения." + ИмяТаблицы + "." + ЭлемОписание.Имя;
				Поле.Вид = ВидПоляФормы.ПолеВвода;
				Если ЭлемОписание.Имя = "Активность" Тогда
					Поле.ПропускатьПриВводе = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;    
		
		ТаблицаФормы.УстановитьДействие("ПриАктивизацииСтроки", "ТаблицаФормыПриАктивизацииСтроки");
  		ТаблицаФормы.УстановитьДействие("ПриИзменении", "ТаблицаФормыПриИзменении");
		ТаблицаФормы.УстановитьДействие("ПриОкончанииРедактирования", "ТаблицаФормыПриОкончанииРедактирования");
		ТаблицаФормы.УстановитьДействие("ПриНачалеРедактирования", "ТаблицаФормыПриНачалеРедактирования");
		ТаблицаФормы.УстановитьДействие("ПослеУдаления", "ТаблицаФормыПослеУдаления");
			
	КонецЦикла;
	
	ЭтотОбъект.КоличествоТЧ = ЭтотОбъект.ТабличныеЧасти.Количество();
		
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	
	Элементы.ГруппаТабличныеЧасти.ПутьКДаннымЗаголовка = "КоличествоТЧ";
	
	Элементы.РеквизитыСтроки.ИзменятьСоставСтрок = Ложь;
	Элементы.РеквизитыСтроки.ИзменятьПорядокСтрок = Ложь;
	
	Элементы.РеквизитыСтрокиИмя.ТолькоПросмотр = Истина;
	Элементы.РеквизитыСтрокиСиноним.ТолькоПросмотр = Истина;
	Элементы.РеквизитыСтрокиТипЗначения.ТолькоПросмотр = Истина;
	
	Элементы.ТабличныеЧасти.ИзменятьСоставСтрок = Ложь;
	Элементы.ТабличныеЧасти.ИзменятьПорядокСтрок = Ложь;
	Элементы.ТабличныеЧастиИмя.ТолькоПросмотр = Истина;
	Элементы.ТабличныеЧастиКоличество.ТолькоПросмотр = Истина;
	
	ЕстьТЧ = Истина;
	Элементы.РеквизитыСтроки.Видимость = ЕстьТЧ И ЭтотОбъект.Настройки.НастройкаВыводитьРеквизитыСтроки;
	
	Элементы.Ссылка.КнопкаВыбора = Ложь;
	Элементы.Ссылка.ТолькоПросмотр = Истина;
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РеквизитыСтрокиЗначение.Имя);
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РеквизитыСтроки.Имя");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = "НомерСтроки";
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УпрФормой(Знач Форма)
	
	Форма.Элементы.ФормаКомандаЗаписать.Доступность = Форма.Элементы.ФормаКомандаРедактироватьОбъект.Пометка;
	Форма.Элементы.КомандаЗаписатьТекущийРегистр.Доступность = Форма.Элементы.ФормаКомандаРедактироватьОбъект.Пометка; 
	
КонецПроцедуры

#КонецОбласти

#Область Форма

&НаКлиенте
Процедура ВопросОСохранении_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		ЭтотОбъект.Модифицированность = Ложь;
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИмяФормыОбработки(Имя)
	
	ТипМетаданных = ?(СтрНачинаетсяС(ЭтотОбъект.ИмяФормы, "ВнешняяОбработка"), "ВнешняяОбработка", "Обработка");
	Возврат ТипМетаданных + ".bm_Навигатор.Форма." + Имя;
	
КонецФункции

&НаСервере
Функция ОписаниеОбъектаМетаданных(Знач Ссылка)
	
	Обт = РеквизитФормыВЗначение("Объект");
	Результат = Обт.ОписаниеОбъектаМетаданных(Ссылка);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Библиотека

&НаСервереБезКонтекста
Функция ЭтоСсылка(Тип)
	
	Если Тип = Тип("Неопределено") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = Справочники.ТипВсеСсылки().СодержитТип(Тип)
		Или Перечисления.ТипВсеСсылки().СодержитТип(Тип)
		Или Документы.ТипВсеСсылки().СодержитТип(Тип)	
		Или ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(Тип)
		Или ПланыСчетов.ТипВсеСсылки().СодержитТип(Тип)
		Или ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(Тип)
		Или БизнесПроцессы.ТипВсеСсылки().СодержитТип(Тип)
		Или БизнесПроцессы.ТипВсеСсылкиТочекМаршрутаБизнесПроцессов().СодержитТип(Тип)
		Или Задачи.ТипВсеСсылки().СодержитТип(Тип)
		Или ПланыОбмена.ТипВсеСсылки().СодержитТип(Тип);
		
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СкопироватьСтруктуру(Знач Источник)
	
	Приемник = Новый Структура();
	Для Каждого КиЗ Из Источник Цикл
		Приемник.Вставить(КиЗ.Ключ, КиЗ.Значение);
	КонецЦикла;
	
	Возврат Приемник;
	
КонецФункции

#КонецОбласти




