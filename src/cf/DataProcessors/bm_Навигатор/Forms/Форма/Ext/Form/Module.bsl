#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;

	Элементы.ДеревоФункций.ТолькоПросмотр = Истина;
	Элементы.ДеревоФункций.ИзменятьПорядокСтрок = Ложь;
	Элементы.ДеревоФункций.ИзменятьСоставСтрок = Ложь;
	Элементы.ДеревоФункций.ПоложениеУправленияПоиском = ПоложениеУправленияПоиском.КоманднаяПанель;
	Элементы.ДеревоФункций.ПоложениеСтрокиПоиска = ПоложениеСтрокиПоиска.КоманднаяПанель;
	
	ДеревоФункций_Заполнить();
	
	ЭтотОбъект.НастройкаОткрыватьФормуОбработки = Истина;
	ЭтотОбъект.НастройкаВыводитьUUID = Истина;
	
	Элементы.НастройкаПоляСпискаСостав.РежимВыбораИзСписка = Истина;
	Элементы.НастройкаПоляСпискаСостав.СписокВыбора.Добавить("Все");
	Элементы.НастройкаПоляСпискаСостав.СписокВыбора.Добавить("Стд", "Стандартные");
	Элементы.НастройкаПоляСпискаСостав.СписокВыбора.Добавить("Вбр", "Стандартные и выбранные");
	ЭтотОбъект.НастройкаПоляСпискаСостав = "Вбр";
	
	ЭтотОбъект.НастройкаПоляСпискаВыбранные = "Организация,Партнер,Контрагент,Склад,СуммаДокумента,Комментарий";
	Элементы.НастройкаПоляСпискаВыбранные.КнопкаВыпадающегоСписка = Истина;	
	Элементы.НастройкаПоляСпискаВыбранные.СписокВыбора.Добавить(ЭтотОбъект.НастройкаПоляСпискаВыбранные);
	
	ЭтотОбъект.ПеременныеОкружения = Новый Структура();
	ЭтотОбъект.ПеременныеОкружения.Вставить("БезопасныйРежим", БезопасныйРежим());
	ЭтотОбъект.ПеременныеОкружения.Вставить("ЭтоКлиентСервер", СтрНайти(ВРег(СтрокаСоединенияИнформационнойБазы()), "FILE=") = 0);
	ЭтотОбъект.ПеременныеОкружения.Вставить("ЕстьРасширение", Метаданные.ОбщиеМодули.Найти("bm_Запросы") <> Неопределено);
	ЭтотОбъект.ПеременныеОкружения.Вставить("ЕстьДлительныеОперации", Метаданные.ОбщиеМодули.Найти("ДлительныеОперации") <> Неопределено);
	
	ЕстьВнешОбработкаКонсольЗапросов = Ложь;
	Попытка
		Обт = ВнешниеОбработки.Создать("bm_КонсольЗапросов");
		ЕстьВнешОбработкаКонсольЗапросов = Истина;
	Исключение
	КонецПопытки;
	ЭтотОбъект.ПеременныеОкружения.Вставить("ЕстьВнешОбработкаКонсольЗапросов", ЕстьВнешОбработкаКонсольЗапросов);
	
КонецПроцедуры     

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ДеревоФункцийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ДеревоФункций.ТекущиеДанные;
	Если Не ЕстьФункция(ТекДанные) Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьЭлемент(ТекДанные);
	
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура КомандаРазвернутьСтроки(Команда)

	Для Каждого Строка Из ЭтотОбъект.ДеревоФункций.ПолучитьЭлементы() Цикл
		Элементы.ДеревоФункций.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСвернутьСтроки(Команда)
	
	ТекДанные = Элементы.ДеревоФункций.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекРодитель = ТекДанные.ПолучитьРодителя();
		Если ТекРодитель <> Неопределено Тогда
			Элементы.ДеревоФункций.ТекущаяСтрока = ТекРодитель.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Строка Из ЭтотОбъект.ДеревоФункций.ПолучитьЭлементы() Цикл
		Элементы.ДеревоФункций.Свернуть(Строка.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьЭлемент(Команда)

	ТекДанные = Элементы.ДеревоФункций.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Не ЕстьФункция(ТекДанные) Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьЭлемент(ТекДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоискПоURL(Команда)
	
	Настройки = Новый Структура(СтрокаНастроек());
	ЗаполнитьЗначенияСвойств(Настройки, ЭтотОбъект);
	ОткрытьФорму(ИмяФормыОбработки("ПоискПоURL"), Новый Структура("Настройки", Настройки), ЭтотОбъект, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ДеревоФункций

&НаСервере
Процедура ДеревоФункций_Заполнить()
	
	Обт = РеквизитФормыВЗначение("Объект");
	КоллекцияМетаданных = Обт.КоллекцияМетаданных();
	
	Для Каждого СтрокаТЗ Из КоллекцияМетаданных Цикл
		
		Если СтрокаТЗ.ИмяЕдч = "ВнешнийИсточникДанных" Тогда
			Продолжить;
		КонецЕсли;
				
		Если Не ПустаяСтрока(СтрокаТЗ.Картинка) Тогда
			Картинка = БиблиотекаКартинок[СтрокаТЗ.Картинка];
		Иначе
			Картинка = Новый Картинка();
		КонецЕсли;
		
		НовСтр0 = ЭтотОбъект.ДеревоФункций.ПолучитьЭлементы().Добавить();
		НовСтр0.ИмяМнч 	= СтрокаТЗ.ИмяМнч;
		НовСтр0.ИмяЕдч 	= СтрокаТЗ.ИмяЕдч;
		НовСтр0.Имя 	= СтрокаТЗ.ИмяЕдч;
		НовСтр0.Картинка= Картинка;
		
		Для Каждого ОМ Из Метаданные[СтрокаТЗ.ИмяМнч] Цикл
			
			НовСтр1 = НовСтр0.ПолучитьЭлементы().Добавить();
			НовСтр1.ИмяМнч = СтрокаТЗ.ИмяМнч;
			НовСтр1.ИмяЕдч = СтрокаТЗ.ИмяЕдч;		
			НовСтр1.Имя 		= ОМ.Имя;
			НовСтр1.Синоним 	= ОМ.Синоним;
			НовСтр1.Картинка 	= Картинка;
			
		КонецЦикла;
		
		ДеревоФункций_СортироватьУзелДерева(НовСтр0);
		
	КонецЦикла;
	
	ДеревоФункций_ЗаполнитьВнешниеИсточникиДанных();
	
КонецПроцедуры

&НаСервере
Процедура ДеревоФункций_ЗаполнитьВнешниеИсточникиДанных()
	
	Список = Новый СписокЗначений();
	Для Каждого ОМ Из Метаданные.ВнешниеИсточникиДанных Цикл
		Список.Добавить(ОМ.Имя);
	КонецЦикла;
	Список.СортироватьПоЗначению();
	
	Картинка = БиблиотекаКартинок.ВнешнийИсточникДанных;
	
	НовСтр0 = ЭтотОбъект.ДеревоФункций.ПолучитьЭлементы().Добавить();
	НовСтр0.ИмяМнч 	= "ВнешниеИсточникиДанных";
	НовСтр0.ИмяЕдч 	= "ВнешнийИсточникДанных";
	НовСтр0.Имя 	= "ВнешниеИсточникиДанных";
	НовСтр0.Картинка= Картинка;
		
	Для Каждого Элем Из Список Цикл
	
		ОМ = Метаданные.ВнешниеИсточникиДанных[Элем.Значение];
		НовСтр1 = НовСтр0.ПолучитьЭлементы().Добавить();
		НовСтр1.ИмяМнч = "ВнешниеИсточникиДанных." + ОМ.Имя;
		НовСтр1.ИмяЕдч = "ВнешнийИсточникДанных." + ОМ.Имя;		
		НовСтр1.Имя 		= ОМ.Имя;
		НовСтр1.Синоним 	= ОМ.Синоним;
		НовСтр1.Картинка 	= Картинка;
		
		Ветка = НовСтр1.ПолучитьЭлементы().Добавить();
		Ветка.ИмяМнч 		= "ВнешниеИсточникиДанных." + ОМ.Имя + ".Таблицы";
		Ветка.ИмяЕдч 		= "ВнешнийИсточникДанных." + ОМ.Имя + ".Таблица";
		Ветка.Имя 			= "Таблицы";
		Ветка.Синоним 		= "Таблицы";
		Ветка.Картинка 		= БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
		
		ПодСписок = Новый СписокЗначений();
		Для Каждого ПодЭлемОМ Из Метаданные.ВнешниеИсточникиДанных[ОМ.Имя].Таблицы Цикл
			ПодСписок.Добавить(ПодЭлемОМ.Имя);
		КонецЦикла;
		ПодСписок.СортироватьПоЗначению();
		
		Для Каждого ПодЭлем Из ПодСписок Цикл
			ЭлемОМ = Метаданные.ВнешниеИсточникиДанных[ОМ.Имя].Таблицы[ПодЭлем.Значение];
			НовСтр = Ветка.ПолучитьЭлементы().Добавить();	
			НовСтр.ИмяМнч 		= "ВнешниеИсточникиДанных." + ОМ.Имя + ".Таблицы";
			НовСтр.ИмяЕдч 		= "ВнешнийИсточникДанных." + ОМ.Имя + ".Таблица";
			НовСтр.Имя 			= ЭлемОМ.Имя;
			НовСтр.Синоним 		= ЭлемОМ.Синоним;
			НовСтр.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхТаблица;
		КонецЦикла;
		
		Ветка = НовСтр1.ПолучитьЭлементы().Добавить();
		Ветка.ИмяМнч 		= "ВнешниеИсточникиДанных." + ОМ.Имя + ".Кубы";
		Ветка.ИмяЕдч 		= "ВнешнийИсточникДанных." + ОМ.Имя + ".Куб";
		Ветка.Имя 			= "Кубы";
		Ветка.Синоним 		= "Кубы";
		Ветка.Картинка 		= БиблиотекаКартинок.ВнешнийИсточникДанныхКуб;
		
		ПодСписок = Новый СписокЗначений();
		Для Каждого ПодЭлемОМ Из Метаданные.ВнешниеИсточникиДанных[ОМ.Имя].Кубы Цикл
			ПодСписок.Добавить(ПодЭлемОМ.Имя);
		КонецЦикла;
		ПодСписок.СортироватьПоЗначению();
		
		Для Каждого ПодЭлем Из ПодСписок Цикл
			ЭлемОМ = Метаданные.ВнешниеИсточникиДанных[ОМ.Имя].Кубы[ПодЭлем.Значение];
			НовСтр = Ветка.ПолучитьЭлементы().Добавить();	
			НовСтр.ИмяМнч 		= "ВнешниеИсточникиДанных." + ОМ.Имя + ".Кубы";
			НовСтр.ИмяЕдч 		= "ВнешнийИсточникДанных." + ОМ.Имя + ".Куб";
			НовСтр.Имя 			= ЭлемОМ.Имя;
			НовСтр.Синоним 		= ЭлемОМ.Синоним;
			НовСтр.Картинка 	= БиблиотекаКартинок.ВнешнийИсточникДанныхКуб;
		КонецЦикла;
		
	КонецЦикла;
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДеревоФункций_СортироватьУзелДерева(УзелДерева)
	
	Список = Новый СписокЗначений();
	Соот = Новый Соответствие();
	
	Для Каждого СтрокаДерева Из УзелДерева.ПолучитьЭлементы() Цикл
		Список.Добавить(СтрокаДерева.Имя);
		Структ = Новый Структура("ИмяМнч,ИмяЕдч,Имя,Синоним,Картинка");
		ЗаполнитьЗначенияСвойств(Структ, СтрокаДерева);
		Соот.Вставить(СтрокаДерева.Имя, Структ);
	КонецЦикла;
	
	УзелДерева.ПолучитьЭлементы().Очистить();
	Список.СортироватьПоЗначению();
	
	Для Каждого Элем Из Список Цикл
		СтрокаДерева = УзелДерева.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДерева, Соот.Получить(Элем.Значение));
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Форма

&НаКлиенте
Функция ЕстьФункция(ТекДанные)
	
	Если ТекДанные.ПолучитьРодителя() = Неопределено Или ТекДанные.ПолучитьЭлементы().Количество() > 0 Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьЭлемент(ТекДанные)
	
	Если ТекДанные.ИмяЕдч = "Константа" Тогда
		ОткрытьФорму("Константа." + ТекДанные.Имя + ".ФормаКонстант");
		Возврат;
	ИначеЕсли ТекДанные.ИмяЕдч = "Отчет" Тогда
		ОткрытьФорму("Отчет." + ТекДанные.Имя + ".Форма");
		Возврат;
	ИначеЕсли ТекДанные.ИмяЕдч = "Обработка" Тогда
		ОткрытьФорму("Обработка." + ТекДанные.Имя + ".Форма");
		Возврат;
	ИначеЕсли СтрЗаканчиваетсяНа(ТекДанные.ИмяЕдч, ".Куб") Тогда
		ВызватьИсключение "Поддержка типа не реализована в обработке";
	КонецЕсли;
	
	Описание = Новый Структура("ИмяМнч,ИмяЕдч,Имя,Синоним");
	ЗаполнитьЗначенияСвойств(Описание, ТекДанные);
	
	Описание = ОписаниеОбъектаМетаданных(Описание);
		
	Настройки = Новый Структура(СтрокаНастроек());
	ЗаполнитьЗначенияСвойств(Настройки, ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура("Описание, Настройки", Описание, Настройки); 
	ОткрытьФорму(ИмяФормыОбработки("ФормаСписка"), ПараметрыОткрытия,, Описание.ОсновнаяТаблица);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаНастроек()
	
	Возврат "НастройкаОткрыватьФормуОбработки,НастройкаВыбиратьРазрешенные,НастройкаВыводитьUUID,НастройкаПоляСпискаСостав,НастройкаПоляСпискаВыбранные,НастройкаВыводитьРеквизитыСтроки";
	
КонецФункции

&НаКлиенте
Функция ИмяФормыОбработки(Имя)
	
	ТипМетаданных = ?(СтрНачинаетсяС(ЭтотОбъект.ИмяФормы, "ВнешняяОбработка"), "ВнешняяОбработка", "Обработка");
	Возврат ТипМетаданных + ".bm_Навигатор.Форма." + Имя;
	
КонецФункции

&НаСервере
Функция ОписаниеОбъектаМетаданных(Знач Описание)
	
	Обт = РеквизитФормыВЗначение("Объект");
	Результат = Обт.ОписаниеОбъектаМетаданных(Описание);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти



