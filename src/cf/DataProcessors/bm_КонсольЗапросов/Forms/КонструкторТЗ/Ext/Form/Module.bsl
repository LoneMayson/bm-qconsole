&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТипТаблицы") Тогда
		Текст = ?(Параметры.ТипТаблицы = "Врем", "Врем. таблица", "Параметр") + " " + Параметры.ИмяТаблицы;
		ЭтотОбъект.Заголовок = Текст;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Параметры.Адрес) Тогда
		ЗагрузитьДанныеИзВременногоХранилища(Параметры.Адрес);
	КонецЕсли;
	
	Элементы.КолонкиОбновитьТаблицу.Видимость = (Элементы.Таблица.ПодчиненныеЭлементы.Количество() = 0);
		
	НастроитьФорму();
	УстановитьУсловноеОформление();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЭтотОбъект.Модифицированность Тогда
		Отказ = Истина;
		Если Не ЗавершениеРаботы Тогда
			Оповещение = Новый ОписаниеОповещения("ЗакрытьФорму_Завершение", ЭтотОбъект, Новый Структура());
			ПоказатьВопрос(Оповещение, "Закрыть без сохранения?", РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму_Завершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект.Модифицированность = Ложь;
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаТаблица
		И ЭтотОбъект.ФлагИзмененияКолонок Тогда
		ОбновитьТаблицуНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиТипЗначенияПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиТипЗначенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.Колонки.ТекущиеДанные;
	ПараметрыОткрытия = Новый Структура("ПодборТипа, БыстрыйВыбор, ТипЗначения", Ложь, Истина, ТекДанные.ТипЗначения);
	ОткрытьФорму(ИмяФормыОбработки("ВыборТипаЗначения"), ПараметрыОткрытия, Элемент, ЭтотОбъект.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиТипЗначенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.Колонки.ТекущиеДанные;
	ТекДанные.ТипЗначения 	= ВыбранноеЗначение;
	
	ЭтотОбъект.ФлагИзмененияКолонок = Истина;
	ЭтотОбъект.Модифицированность 	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиРасширениеПриИзменении(Элемент)
	
	ТекДанные = Элементы.Колонки.ТекущиеДанные;
	Если ТекДанные.Расширение = "" Тогда
		ТекДанные.ТипЗначения = Новый ОписаниеТипов();
		ТекДанные.ФлагРасширение = Ложь;
	ИначеЕсли ТекДанные.Расширение = "Тип" Тогда
		ТекДанные.ТипЗначения = Новый ОписаниеТипов("Тип");
		ТекДанные.ФлагРасширение = Истина;
	ИначеЕсли ТекДанные.Расширение = "МоментВремени" Тогда
		ТекДанные.ТипЗначения = Новый ОписаниеТипов("МоментВремени");
		ТекДанные.ФлагРасширение = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиПриИзменении(Элемент)
	
	ЭтотОбъект.ФлагИзмененияКолонок = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекДанные = Элементы.Колонки.ТекущиеДанные;
	
	Если НоваяСтрока Тогда
		ТекДанные.ТипЗначения = Новый ОписаниеТипов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если НоваяСтрока Тогда
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиПослеУдаления(Элемент)
	
	Если ЭтотОбъект.Колонки.Количество() = 0 Тогда
		Элементы.КолонкиОбновитьТаблицу.Видимость = Истина;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПослеУдаления(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Отказ = Ложь;
	
	Если ЭтотОбъект.ФлагИзмененияКолонок Тогда
		ОбновитьТаблицуНаКлиенте(Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ЭтотОбъект.Модифицированность = Ложь;
		ОповеститьОВыборе(ПоместитьДанныеВоВременноеХранилище());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьАдрес(Команда)
	
	Описание = Новый ОписаниеТипов("Строка");
	Значение = Описание.ПривестиЗначение();
	
	Оповещение = Новый ОписаниеОповещения("УказатьАдрес_Завершение", ЭтотОбъект, Новый Структура());
	
	ПоказатьВводЗначения(Оповещение, Значение); 
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьАдрес_Завершение(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение = Неопределено Или ПустаяСтрока(Значение) Тогда
		Возврат; 
	КонецЕсли;
	
	ЭтотОбъект.Колонки.Очистить();
	УдалитьСтарыеРеквизиты();
	ЗагрузитьДанныеИзВременногоХранилища(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	
	ОбновитьТаблицуНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуНаКлиенте(Отказ = Ложь)
	
	Попытка
		ОбновитьТаблицуНаСервере();
		ЭтотОбъект.ФлагИзмененияКолонок = Ложь;
	Исключение
		Отказ = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаКолонки;
		ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
    	ПоказатьПредупреждение(, ТекстСообщения);
	КонецПопытки;
	
	Элементы.КолонкиОбновитьТаблицу.Видимость = (Элементы.Таблица.ПодчиненныеЭлементы.Количество() = 0);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуНаСервере()
	
	Попытка
		ПроверитьСозданиеТЗ();	
	Исключение
		ВызватьИсключение;
	КонецПопытки;
	
	СтараяТЗ = ЭтотОбъект.Таблица.Выгрузить();
	ЭтотОбъект.Таблица.Очистить();
	
	УдалитьСтарыеРеквизиты();
	СоздатьНовыеРеквизиты();
	
	Если СтараяТЗ.Количество() > 0 Тогда
   		ЗагрузитьНовуюТЗИзСтарой(СтараяТЗ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСозданиеТЗ()
	
	ТЗ = Новый ТаблицаЗначений();
	
	Для Каждого Колонка Из ЭтотОбъект.Колонки Цикл
		Если ПустаяСтрока(Колонка.Имя) Тогда
			ВызватьИсключение "Пустое имя колонки";
		КонецЕсли;
		ТЗ.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНовуюТЗИзСтарой(Источник)
	
	Приемник = ЭтотОбъект.Таблица.Выгрузить();
	МассивИменКолонок = Новый Массив();
	Для Каждого КолонкаИсточника Из Источник.Колонки Цикл
		НоваяКолонка = Приемник.Колонки.Найти(КолонкаИсточника.Имя);
		Если НоваяКолонка <> Неопределено Тогда
			МассивИменКолонок.Добавить(КолонкаИсточника.Имя);
		КонецЕсли;
	КонецЦикла;
	Если МассивИменКолонок.Количество() > 0 Тогда
		СписокСвойств = "";
		Для Каждого ИмяКолонки Из МассивИменКолонок Цикл
			СписокСвойств = СписокСвойств + ?(ПустаяСтрока(СписокСвойств), ИмяКолонки, "," + ИмяКолонки);
		КонецЦикла;
		Для Каждого Стр Из Источник Цикл
			НовСтр = Приемник.Добавить();
			Для Каждого ИмяКолонки Из МассивИменКолонок Цикл
				Значение = Приемник.Колонки[ИмяКолонки].ТипЗначения.ПривестиЗначение(Стр[ИмяКолонки]);
				НовСтр[ИмяКолонки] = Значение;
			КонецЦикла;
		КонецЦикла;
		ЭтотОбъект.Таблица.Загрузить(Приемник);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УдалитьСтарыеРеквизиты()
	
	РеквизитФормы 	= РеквизитФормыВЗначение("Таблица");
	КолонкиТЗ 		= РеквизитФормы.Колонки;
	
	МассивРеквизитов = Новый Массив();	
	Для Каждого Колонка Из КолонкиТЗ Цикл
		МассивРеквизитов.Добавить("Таблица." + Колонка.Имя);
	КонецЦикла;
	ЭтаФорма.ИзменитьРеквизиты(, МассивРеквизитов);
	
	Для Каждого Колонка Из КолонкиТЗ Цикл
		Элементы.Удалить(Элементы["Таблица" + Колонка.Имя]);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьНовыеРеквизиты()
	
	МассивРеквизитов = Новый Массив();
	Для Каждого Колонка Из ЭтотОбъект.Колонки Цикл
		Если Колонка.ТипЗначения.СодержитТип(Тип("Тип")) Тогда
			МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, ОписаниеТиповТипаИзКолонки(Колонка.ТипЗначения), "Таблица", Колонка.Имя));
		ИначеЕсли Колонка.ТипЗначения.СодержитТип(Тип("МоментВремени")) Тогда
			МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, ОписаниеТиповМоментВремениИзКолонки(Колонка.ТипЗначения), "Таблица", Колонка.Имя));
		Иначе
			МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Таблица", Колонка.Имя));
		КонецЕсли;
	КонецЦикла;
	ЭтаФорма.ИзменитьРеквизиты(МассивРеквизитов);
	
	Для Каждого Колонка Из ЭтотОбъект.Колонки Цикл
		ПолеФормы = Элементы.Добавить("Таблица" + Колонка.Имя, Тип("ПолеФормы"), Элементы.Таблица);
		ПолеФормы.ПутьКДанным = "Таблица." + Колонка.Имя;
		ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеТиповТипаИзКолонки(ТипЗначения)
	
	МассивТипов = Новый Массив();           
	МассивТипов.Добавить(Тип("Строка"));
	Для Каждого Тип Из ТипЗначения.Типы() Цикл
		Если Тип <> Тип("Тип") Тогда
			МассивТипов.Добавить(Тип);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый ОписаниеТипов(МассивТипов);
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОписаниеТиповМоментВремениИзКолонки(ТипЗначения)
	
	МассивТипов = Новый Массив();           
	Для Каждого Тип Из ТипЗначения.Типы() Цикл
		Если Тип <> Тип("МоментВремени") Тогда
			МассивТипов.Добавить(Тип);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый ОписаниеТипов(Документы.ТипВсеСсылки(), МассивТипов);
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьДанныеИзВременногоХранилища(Адрес)
	
	ТЗ = ПолучитьИзВременногоХранилища(Адрес);
	
	КолонкиТип = Новый Массив();
	КолонкиМоментВремени = Новый Массив();
	ЗаменяемыеКолонки = Новый Массив();
	
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		НовСтр = ЭтотОбъект.Колонки.Добавить();
		НовСтр.Имя = Колонка.Имя;
		НовСтр.ТипЗначения = Колонка.ТипЗначения;
		Если Колонка.ТипЗначения.СодержитТип(Тип("Тип")) Тогда
			НовСтр.ФлагРасширение = Истина;
			НовСтр.Расширение = "Тип";
			КолонкиТип.Добавить(Колонка.Имя);
			ЗаменяемыеКолонки.Добавить(Колонка.Имя);
		ИначеЕсли Колонка.ТипЗначения.СодержитТип(Тип("МоментВремени")) Тогда
			НовСтр.ФлагРасширение = Истина;
			НовСтр.Расширение = "МоментВремени";
			КолонкиМоментВремени.Добавить(Колонка.Имя);
			ЗаменяемыеКолонки.Добавить(Колонка.Имя);
		КонецЕсли;
	КонецЦикла;
	
	СоздатьНовыеРеквизиты();
	
	Если ЗаменяемыеКолонки.Количество() = 0 Тогда
		ЭтотОбъект.Таблица.Загрузить(ТЗ);
	Иначе                           
		ИсключаемыеСвойства = СтрСоединить(ЗаменяемыеКолонки, ",");
		Для Каждого СтрокаТЗ Из ТЗ Цикл
			НовСтр = ЭтотОбъект.Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, СтрокаТЗ, , ИсключаемыеСвойства);
			Для Каждого ИмяКолонки Из КолонкиТип Цикл
				Если ТипЗнч(СтрокаТЗ[ИмяКолонки]) = Тип("Тип") Тогда
					НовСтр[ИмяКолонки] = ВыражениеВыборкиТипаЗначения(СтрокаТЗ[ИмяКолонки]);
				Иначе
					НовСтр[ИмяКолонки] = СтрокаТЗ[ИмяКолонки];
				КонецЕсли;
			КонецЦикла;
			Для Каждого ИмяКолонки Из КолонкиМоментВремени Цикл
				Если ТипЗнч(СтрокаТЗ[ИмяКолонки]) = Тип("МоментВремени") Тогда
					НовСтр[ИмяКолонки] = СтрокаТЗ[ИмяКолонки].Ссылка;
				Иначе
					НовСтр[ИмяКолонки] = СтрокаТЗ[ИмяКолонки];
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыражениеВыборкиТипаЗначения(ТипЗначения)
	
	Резт = "НЕОПРЕДЕЛЕНО";
	
	ОМ = Метаданные.НайтиПоТипу(ТипЗначения);
	Если ОМ <> Неопределено Тогда
		Резт = ОМ.ПолноеИмя();
	Иначе
		Резт = Строка(ТипЗначения);
	КонецЕсли;
	
	Резт = "ТИП(" + Резт + ")";
	
	Возврат Резт;
	
КонецФункции

&НаСервере
Функция ПоместитьДанныеВоВременноеХранилище()
	
	ТЗ = ЭтотОбъект.Таблица.Выгрузить();
	
	МассивСтрок = ЭтотОбъект.Колонки.НайтиСтроки(Новый Структура("ФлагРасширение", Истина));
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат ПоместитьВоВременноеХранилище(ТЗ);
	Иначе		
		ПреобразоватьТаблицу(ТЗ);
		Возврат ПоместитьВоВременноеХранилище(ТЗ);
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПреобразоватьТаблицу(ТЗ)
	
	ДокументТипВсеСсылки = Документы.ТипВсеСсылки();
	
	Для	Итер = 0 По ЭтотОбъект.Колонки.Количество() - 1 Цикл
		СтрокаКолонка = ЭтотОбъект.Колонки[Итер];
		Если Не СтрокаКолонка.ФлагРасширение Тогда
			Продолжить;
		КонецЕсли;               
		ТЗ.Колонки[СтрокаКолонка.Имя].Имя = "ИсходнаяКолонка_" + СтрокаКолонка.Имя;
		ОписаниеТипов = Новый ОписаниеТипов();
		ТЗ.Колонки.Вставить(Итер, СтрокаКолонка.Имя, СтрокаКолонка.ТипЗначения);
		НомерСтроки = 1;
		Для Каждого СтрокаТЗ Из ТЗ Цикл
			ИсходноеЗначение = СтрокаТЗ["ИсходнаяКолонка_" + СтрокаКолонка.Имя];
			Если СтрокаКолонка.Расширение = "Тип" Тогда
				СтрокаТЗ[СтрокаКолонка.Имя] = ТипИзСтроки(ИсходноеЗначение);
			ИначеЕсли СтрокаКолонка.Расширение = "МоментВремени" Тогда
				Если ДокументТипВсеСсылки.СодержитТип(ТипЗнч(ИсходноеЗначение)) И ИсходноеЗначение <> Неопределено Тогда
					СтрокаТЗ[СтрокаКолонка.Имя] = ИсходноеЗначение.МоментВремени();
				Иначе
					СтрокаТЗ[СтрокаКолонка.Имя] = ИсходноеЗначение;
				КонецЕсли;
			КонецЕсли;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		ТЗ.Колонки.Удалить("ИсходнаяКолонка_" + СтрокаКолонка.Имя);
		Итер = Итер + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ТипИзСтроки(Знач Текст)
	
	Текст = СтрЗаменить(Текст, "ТИП(", ""); 
	Текст = Лев(Текст, СтрДлина(Текст) - 1);
	Поз = Найти(Текст, ".");
	Если Поз > 0 Тогда
		Текст = Лев(Текст, Поз - 1) + "Ссылка." + Прав(Текст, СтрДлина(Текст) - Поз);
	КонецЕсли;
	
	Результат = Тип(Текст);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ИмяФормыОбработки(Имя)
	
	ТипМетаданных = ?(СтрНачинаетсяС(ЭтотОбъект.ИмяФормы, "ВнешняяОбработка"), "ВнешняяОбработка", "Обработка");
	Возврат ТипМетаданных + ".bm_КонсольЗапросов.Форма." + Имя;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Знач Форма)
	
	Форма.КоличествоКолонок = Форма.Колонки.Количество();
	Форма.КоличествоСтрок = Форма.Таблица.Количество();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	
	Элементы.КолонкиТипЗначения.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
	Элементы.КолонкиРасширение.РежимВыбораИзСписка = Истина;
	Элементы.КолонкиРасширение.СписокВыбора.Добавить("Тип");
	Элементы.КолонкиРасширение.СписокВыбора.Добавить("МоментВремени");
	Элементы.КолонкиРасширение.КнопкаОчистки = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Для Каждого СтрокаТЗ Из ЭтотОбъект.Колонки Цикл
				
		ЭлементУО = УсловноеОформление.Элементы.Добавить();	
		ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы["Таблица" + СтрокаТЗ.Имя].Имя);	
		ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Таблица." + СтрокаТЗ.Имя);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Неопределено;
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Кирпичный);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Неопределено>'"));
	
	КонецЦикла;
	
КонецПроцедуры























