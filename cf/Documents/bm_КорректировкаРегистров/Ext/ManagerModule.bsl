#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ЗаполнитьСписокРегистров(Коллекция, Знач Движения, Знач ТолькоЗаполненные) Экспорт
	
	Для Каждого СтруктураРегистра Из ПолучитьТипыРегистров() Цикл	
		Для Каждого ОМ Из Метаданные[СтруктураРегистра.ТипОМ_Имя_Мнч] Цикл
			Набор = Движения.Найти(ОМ.Имя);
			Если Набор = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если ТолькоЗаполненные И Набор.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			НовСтр = Коллекция.Добавить();
			НовСтр.ТипОМ = СтруктураРегистра.ТипОМ_Имя_Едч;
			НовСтр.Имя = ОМ.Имя;
			НовСтр.Синоним = ОМ.Синоним;
			НовСтр.Картинка = БиблиотекаКартинок[СтруктураРегистра.ТипОМ_Имя_Едч];
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьИспользуемыеДвижения(СсылкаНаОбъект) Экспорт
	
	ТаблицыРегистратора = ПолучитьТаблицыРегистратора("bm_КорректировкаРегистров");
	ДвиженияДокумента = ПолучитьДвиженияДокумента(СсылкаНаОбъект, ТаблицыРегистратора);
	
	Возврат ДвиженияДокумента;
	
КонецФункции

#Область ДвиженияДокумента

&НаСервере
Функция ПолучитьДвиженияДокумента(Знач Регистратор, Знач ТаблицыРегистратора)
	
	Результат = Новый Массив();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.Текст = ПолучитьТекстЗапросаКТаблицам(ТаблицыРегистратора);
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ИндексЗапроса = 0;
	Для Каждого СтруктураРегистра Из ТаблицыРегистратора Цикл
		РезультатЗапроса  = ПакетЗапросов[ИндексЗапроса];
		ИндексЗапроса = ИндексЗапроса + 1;
		Если РезультатЗапроса.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		СтруктураДвижения = Новый Структура("СтруктураРегистра, РезультатЗапроса", СтруктураРегистра, РезультатЗапроса);
		Результат.Добавить(СтруктураДвижения);	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаКТаблицам(Знач ТаблицыРегистратора)
	
	ТекстЗапроса = "";
	
	ПерваяСтрока = Истина;
	Для Каждого СтруктураРегистра Из ТаблицыРегистратора Цикл
		ОчереднойТекст = ПолучитьТекстЗапросаКТаблице(СтруктураРегистра.ИмяТаблицы);
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
			ТекстЗапроса = ОчереднойТекст;
		Иначе
			ТекстЗапроса = ТекстЗапроса +
			"
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" + ОчереднойТекст;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаКТаблице(Знач ИмяТаблицы)
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.НомерСтроки
	|ИЗ
	|	" + ИмяТаблицы + " КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Библиотека

&НаСервере
Функция ПолучитьТаблицыРегистратора(Знач ИмяДокумента, Знач ДополнительныеПараметры = Неопределено)
	
	Результат = Новый Массив();
	
	ТЗ = Новый ТаблицаЗначений();   
	ТЗ.Колонки.Добавить("ОМ_Имя");
	ТЗ.Колонки.Добавить("ОМ");
	
	Для Каждого СтруктураТипаРегистра Из ПолучитьТипыРегистров() Цикл
		КОМ = Метаданные[СтруктураТипаРегистра["ТипОМ_Имя_Мнч"]];
		ТЗ.Очистить();
		Для Каждого ОМ Из Метаданные.Документы[ИмяДокумента].Движения Цикл		
			Если КОМ.Содержит(ОМ) Тогда
				НовСтр = ТЗ.Добавить();
				НовСтр.ОМ_Имя 	= ОМ.Имя;
				НовСтр.ОМ 		= ОМ;			
			КонецЕсли;
		КонецЦикла;   
		ТЗ.Сортировать("ОМ_Имя");
		Для Каждого СтрокаТЗ Из ТЗ Цикл
			СтруктураРегистра = ПолучитьСтруктуруРегистра(СтрокаТЗ.ОМ, ДополнительныеПараметры);
			Результат.Добавить(СтруктураРегистра);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьТипыРегистров()
	
	ТипыРегистров = Новый Массив();
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрСведений", 		"РегистрыСведений"));
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрНакопления", 	"РегистрыНакопления"));
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрРасчета", 		"РегистрыРасчета"));
	ТипыРегистров.Добавить(Новый Структура("ТипОМ_Имя_Едч, ТипОМ_Имя_Мнч", "РегистрБухгалтерии", 	"РегистрыБухгалтерии"));
	
	Возврат ТипыРегистров;
	
КонецФункции

&НаСервере
Функция МассивСтруктур_Найти(МассивСтруктур, Значение, Ключ)
	
	Для Каждого Структура Из МассивСтруктур Цикл
		Если Структура[Ключ] = Значение Тогда
			Возврат Структура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруРегистра(Знач ОМ, Знач ДополнительныеПараметры = Неопределено)
	
	Результат = Новый Структура("ТипОМ_Имя,ТипОМ_Синоним,ОМ_Имя,ОМ_Синоним,ИмяТаблицы,КоллекцииСвойств,СтандартныеРеквизиты,Измерения,Ресурсы,Реквизиты");
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура();
	КонецЕсли;
	
	Результат.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Если Метаданные.РегистрыСведений.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрСведений";
		Результат.ТипОМ_Синоним = "Регистр сведений";
	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрНакопления";
		Результат.ТипОМ_Синоним = "Регистр накопления";
	ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрБухгалтерии";
		Результат.ТипОМ_Синоним = "Регистр бухгалтерии";
		Результат.Вставить("Корреспонденция", ОМ.Корреспонденция);
		Результат.Вставить("МаксКоличествоСубконто", ОМ.ПланСчетов.МаксКоличествоСубконто);
	ИначеЕсли Метаданные.РегистрыРасчета.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрРасчета";
		Результат.ТипОМ_Синоним = "Регистр расчета";
	КонецЕсли;
	
	Результат.ОМ_Имя 		= ОМ.Имя;
	Результат.ОМ_Синоним 	= ОМ.Синоним;
	Результат.ИмяТаблицы 	= Результат.ТипОМ_Имя + "." + Результат.ОМ_Имя;
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,Ресурсы,Реквизиты", ",");
	
	Для Каждого Коллекция Из Результат.КоллекцииСвойств Цикл		
		Результат[Коллекция] = Новый Массив();
		Для Каждого Элемент Из ОМ[Коллекция] Цикл		
			Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя, Элемент.Синоним, Элемент.Тип);
			Если Результат.ТипОМ_Имя = "РегистрБухгалтерии" И (Коллекция = "Измерения" Или Коллекция = "Ресурсы") Тогда
				Описание.Вставить("Балансовый", Элемент.Балансовый);
			КонецЕсли;
			Результат[Коллекция].Добавить(Описание);
		КонецЦикла;	
	КонецЦикла;
	
	Если Результат.ТипОМ_Имя = "РегистрБухгалтерии" Тогда
		Если Результат.Корреспонденция Тогда
			ДополнитьСтруктуруРегистраБухгалтерииБалансИстина(Результат, ОМ);
		Иначе
			ДополнитьСтруктуруРегистраБухгалтерииБалансЛожь(Результат, ОМ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

&НаСервере
Процедура ДополнитьСтруктуруРегистраБухгалтерииБалансИстина(Результат, Знач ОМ)
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,ИзмеренияДт,СчетДт,РесурсыДт,ИзмеренияКт,СчетКт,РесурсыКт,Ресурсы,Реквизиты", ",");
	Результат.Вставить("Измерения", Новый Массив());
	Результат.Вставить("Ресурсы", Новый Массив());
	Результат.Вставить("ИзмеренияДт", Новый Массив());
	Результат.Вставить("СчетДт", Новый Массив());
	Результат.Вставить("РесурсыДт", Новый Массив());
	Результат.Вставить("ИзмеренияКт", Новый Массив());
	Результат.Вставить("СчетКт", Новый Массив());
	Результат.Вставить("РесурсыКт", Новый Массив());
	
	Для Каждого Коллекция Из СтрРазделить("Измерения,Ресурсы", ",") Цикл
		Для Каждого Элемент Из ОМ[Коллекция] Цикл		
			Если Элемент.Балансовый Тогда
				Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя, Элемент.Синоним, Элемент.Тип);
				Результат[Коллекция].Добавить(Описание);
			Иначе
				Для Каждого ВидДвижения Из СтрРазделить("Дт,Кт", ",") Цикл
					Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя + ВидДвижения, Элемент.Синоним + " " + ВидДвижения, Элемент.Тип);
					Результат[Коллекция + ВидДвижения].Добавить(Описание);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Для Каждого ВидДвижения Из СтрРазделить("Дт,Кт", ",") Цикл
		Счет = "Счет" + ВидДвижения;
		Описание = Новый Структура("Имя,Синоним,Тип", Счет, Счет, Неопределено);
		Результат[Счет].Добавить(Описание);
		Для Итер = 1 По Результат.МаксКоличествоСубконто Цикл
			Если Результат.ДополнительныеПараметры.Свойство("ЗаполнятьВидСубконто") Тогда
				ВидСубконто = "ВидСубконто" + ВидДвижения + Итер;				
				Описание = Новый Структура("Имя,Синоним,Тип", ВидСубконто, ВидСубконто, Неопределено);
				Результат[Счет].Добавить(Описание);
			КонецЕсли;
			Субконто 	= "Субконто" + ВидДвижения + Итер;
			Описание = Новый Структура("Имя,Синоним,Тип", Субконто, Субконто, Неопределено);
			Результат[Счет].Добавить(Описание);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьСтруктуруРегистраБухгалтерииБалансЛожь(Результат, Знач ОМ)
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,Счет,Ресурсы,Реквизиты", ",");
	Результат.Вставить("Счет", Новый Массив());
	
	Описание = Новый Структура("Имя,Синоним,Тип", "Счет", "Счет", Неопределено);
	Результат.Счет.Добавить(Описание);
	
	Для Итер = 1 По Результат.МаксКоличествоСубконто Цикл
		Если Результат.ДополнительныеПараметры.Свойство("ЗаполнятьВидСубконто") Тогда
			Описание = Новый Структура("Имя,Синоним,Тип", "ВидСубконто" + Итер, "ВидСубконто" + Итер, Неопределено);
			Результат.Счет.Добавить(Описание);
		КонецЕсли;
		Описание = Новый Структура("Имя,Синоним,Тип", "Субконто" + Итер, "Субконто" + Итер, Неопределено);
		Результат.Счет.Добавить(Описание);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

