&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	СоздатьЭлементы(ТекущийОбъект.Движения);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//МассивСтрок = Новый Массив();
	//Для Каждого Строка Из ТекущийОбъект.Регистры Цикл
	//	НаборЗаписей = ТекущийОбъект.Движения[Строка.Имя];
	//	Если НаборЗаписей.Количество() = 0 Тогда
	//		МассивСтрок.Добавить(Строка);
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Для Каждого Строка Из МассивСтрок Цикл
	//	Элементы.Удалить(Элементы["ГруппаНабор" + Строка.Имя]);
	//	ТекущийОбъект.Регистры.Удалить(Строка);	
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСостав(Команда)
		
	МассивРегистров = Новый Массив();
	Для Каждого Строка Из Объект.Регистры Цикл
		МассивРегистров.Добавить(Новый Структура("ТипОМ, Имя", Строка.ТипОМ, Строка.Имя));
	КонецЦикла;
	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("МассивРегистров", МассивРегистров);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоставРегистровЗавершение", ЭтотОбъект, Новый Структура());
	ОткрытьФорму("Документ.bm_КорректировкаРегистров.Форма.СоставРегистров", ПараметрыОткрытия, ЭтотОбъект, ЭтотОбъект.УникальныйИдентификатор,,, ОписаниеОповещения);
	                       
КонецПроцедуры

&НаКлиенте
Процедура СоставРегистровЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоставРегистровЗавершениеСервер(Результат);
	
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура СоставРегистровЗавершениеСервер(Знач МассивРегистров)
	
	ЗаполнитьРегистры(МассивРегистров);
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект"); 
	СоздатьЭлементы(ДокументОбъект.Движения);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРегистры(Знач МассивРегистров)
	
	Для Каждого Строка Из Объект.Регистры Цикл
		Если МассивСтруктур_Найти(МассивРегистров, Строка.Имя, "Имя") = Неопределено Тогда
			Объект.Движения[Строка.Имя].Очистить();
		КонецЕсли;
		Элементы.Удалить(Элементы["ГруппаНабор" + Строка.Имя]);
	КонецЦикла;
			
	Объект.Регистры.Очистить();
		
	Для Каждого Структура Из МассивРегистров Цикл
		НовСтр = Объект.Регистры.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Структура);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементы(Знач Движения)
	
	Для Каждого Строка Из Объект.Регистры Цикл
		
		Если Элементы.Найти("ГруппаНабор" + Строка.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Движения.Найти(Строка.Имя) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НЗ = Движения[Строка.Имя];
		МетаданныеРегистра = НЗ.Метаданные();
		СтруктураРегистра = ПолучитьСтруктуруРегистра(МетаданныеРегистра);
		ДополнитьСтруктуруРегистра(СтруктураРегистра);
		
		ГруппаФормы = Элементы.Добавить("ГруппаНабор" + Строка.Имя, Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
		ГруппаФормы.Заголовок = МетаданныеРегистра.Синоним;
		
		ТаблицаФормы = Элементы.Добавить("Набор" + Строка.Имя, Тип("ТаблицаФормы"), ГруппаФормы);
		ТаблицаФормы.ПутьКДанным = "Объект.Движения." + Строка.Имя;
		
		Для Каждого Коллекция Из СтруктураРегистра.КоллекцииСвойств Цикл
			Для Каждого Элемент Из СтруктураРегистра[Коллекция] Цикл
				ИмяКолонки = Элемент.Имя;
				Поле = Элементы.Добавить("Набор" + Строка.Имя + ИмяКолонки, Тип("ПолеФормы"), ТаблицаФормы);
				Поле.Вид = Элемент.Вид;
				Поле.ПутьКДанным = "Объект.Движения." + Строка.Имя + "." + ИмяКолонки;
				Поле.ТолькоПросмотр = Элемент.ТолькоПросмотр;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьСтруктуруРегистра(СтруктураРегистра)
	
	СтандартныеРеквизиты = Новый Массив();
	Для Каждого ИмяРеквизита Из СтрРазделить("Активность,НомерСтроки,Период,ВидДвижения", ",") Цикл
		Для Каждого ОписаниеИсточник Из СтруктураРегистра.СтандартныеРеквизиты Цикл
			Если ОписаниеИсточник.Имя = ИмяРеквизита Тогда
				Описание = Новый Структура("Имя,Синоним,Тип");
				ЗаполнитьЗначенияСвойств(Описание, ОписаниеИсточник);
				СтандартныеРеквизиты.Добавить(Описание);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	СтруктураРегистра.СтандартныеРеквизиты = СтандартныеРеквизиты;
	
	Для Каждого Коллекция Из СтруктураРегистра.КоллекцииСвойств Цикл
		
		Для Каждого Описание Из СтруктураРегистра[Коллекция] Цикл
			
			Описание.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			Описание.Вставить("Формат", "");
			Описание.Вставить("ТолькоПросмотр", Ложь);
			
			Если Описание.Имя = "Активность" Тогда
				Описание.Вид = ВидПоляФормы.ПолеФлажка;
				Описание.ТолькоПросмотр = Истина;
			ИначеЕсли Описание.Имя = "НомерСтроки" Тогда
				Описание.Вид = ВидПоляФормы.ПолеНадписи;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#Область Библиотека

&НаСервере
Функция МассивСтруктур_Найти(МассивСтруктур, Значение, Ключ)
	
	Для Каждого Структура Из МассивСтруктур Цикл
		Если Структура[Ключ] = Значение Тогда
			Возврат Структура;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруРегистра(Знач ОМ, Знач ДополнительныеПараметры = Неопределено)
	
	Результат = Новый Структура("ТипОМ_Имя,ТипОМ_Синоним,ОМ_Имя,ОМ_Синоним,ИмяТаблицы,КоллекцииСвойств,СтандартныеРеквизиты,Измерения,Ресурсы,Реквизиты");
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = Новый Структура();
	КонецЕсли;
	
	Результат.Вставить("ДополнительныеПараметры", ДополнительныеПараметры);
	
	Если Метаданные.РегистрыСведений.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрСведений";
		Результат.ТипОМ_Синоним = "Регистр сведений";
	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрНакопления";
		Результат.ТипОМ_Синоним = "Регистр накопления";
	ИначеЕсли Метаданные.РегистрыБухгалтерии.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрБухгалтерии";
		Результат.ТипОМ_Синоним = "Регистр бухгалтерии";
		Результат.Вставить("Корреспонденция", ОМ.Корреспонденция);
		Результат.Вставить("МаксКоличествоСубконто", ОМ.ПланСчетов.МаксКоличествоСубконто);
	ИначеЕсли Метаданные.РегистрыРасчета.Содержит(ОМ) Тогда
		Результат.ТипОМ_Имя 	= "РегистрРасчета";
		Результат.ТипОМ_Синоним = "Регистр расчета";
	КонецЕсли;
	
	Результат.ОМ_Имя 		= ОМ.Имя;
	Результат.ОМ_Синоним 	= ОМ.Синоним;
	Результат.ИмяТаблицы 	= Результат.ТипОМ_Имя + "." + Результат.ОМ_Имя;
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,Ресурсы,Реквизиты", ",");
	
	Для Каждого Коллекция Из Результат.КоллекцииСвойств Цикл		
		Результат[Коллекция] = Новый Массив();
		Для Каждого Элемент Из ОМ[Коллекция] Цикл		
			Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя, Элемент.Синоним, Элемент.Тип);
			Если Результат.ТипОМ_Имя = "РегистрБухгалтерии" И (Коллекция = "Измерения" Или Коллекция = "Ресурсы") Тогда
				Описание.Вставить("Балансовый", Элемент.Балансовый);
			КонецЕсли;
			Результат[Коллекция].Добавить(Описание);
		КонецЦикла;	
	КонецЦикла;
	
	Если Результат.ТипОМ_Имя = "РегистрБухгалтерии" Тогда
		Если Результат.Корреспонденция Тогда
			ДополнитьСтруктуруРегистраБухгалтерииБалансИстина(Результат, ОМ);
		Иначе
			ДополнитьСтруктуруРегистраБухгалтерииБалансЛожь(Результат, ОМ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

&НаСервере
Процедура ДополнитьСтруктуруРегистраБухгалтерииБалансИстина(Результат, Знач ОМ)
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,ИзмеренияДт,СчетДт,РесурсыДт,ИзмеренияКт,СчетКт,РесурсыКт,Ресурсы,Реквизиты", ",");
	Результат.Вставить("Измерения", Новый Массив());
	Результат.Вставить("Ресурсы", Новый Массив());
	Результат.Вставить("ИзмеренияДт", Новый Массив());
	Результат.Вставить("СчетДт", Новый Массив());
	Результат.Вставить("РесурсыДт", Новый Массив());
	Результат.Вставить("ИзмеренияКт", Новый Массив());
	Результат.Вставить("СчетКт", Новый Массив());
	Результат.Вставить("РесурсыКт", Новый Массив());
	
	Для Каждого Коллекция Из СтрРазделить("Измерения,Ресурсы", ",") Цикл
		Для Каждого Элемент Из ОМ[Коллекция] Цикл		
			Если Элемент.Балансовый Тогда
				Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя, Элемент.Синоним, Элемент.Тип);
				Результат[Коллекция].Добавить(Описание);
			Иначе
				Для Каждого ВидДвижения Из СтрРазделить("Дт,Кт", ",") Цикл
					Описание = Новый Структура("Имя,Синоним,Тип", Элемент.Имя + ВидДвижения, Элемент.Синоним + " " + ВидДвижения, Элемент.Тип);
					Результат[Коллекция + ВидДвижения].Добавить(Описание);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Для Каждого ВидДвижения Из СтрРазделить("Дт,Кт", ",") Цикл
		Счет = "Счет" + ВидДвижения;
		Описание = Новый Структура("Имя,Синоним,Тип", Счет, Счет, Неопределено);
		Результат[Счет].Добавить(Описание);
		Для Итер = 1 По Результат.МаксКоличествоСубконто Цикл
			Если Результат.ДополнительныеПараметры.Свойство("ЗаполнятьВидСубконто") Тогда
				ВидСубконто = "ВидСубконто" + ВидДвижения + Итер;				
				Описание = Новый Структура("Имя,Синоним,Тип", ВидСубконто, ВидСубконто, Неопределено);
				Результат[Счет].Добавить(Описание);
			КонецЕсли;
			Субконто 	= "Субконто" + ВидДвижения + Итер;
			Описание = Новый Структура("Имя,Синоним,Тип", Субконто, Субконто, Неопределено);
			Результат[Счет].Добавить(Описание);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьСтруктуруРегистраБухгалтерииБалансЛожь(Результат, Знач ОМ)
	
	Результат.КоллекцииСвойств = СтрРазделить("СтандартныеРеквизиты,Измерения,Счет,Ресурсы,Реквизиты", ",");
	Результат.Вставить("Счет", Новый Массив());
	
	Описание = Новый Структура("Имя,Синоним,Тип", "Счет", "Счет", Неопределено);
	Результат.Счет.Добавить(Описание);
	
	Для Итер = 1 По Результат.МаксКоличествоСубконто Цикл
		Если Результат.ДополнительныеПараметры.Свойство("ЗаполнятьВидСубконто") Тогда
			Описание = Новый Структура("Имя,Синоним,Тип", "ВидСубконто" + Итер, "ВидСубконто" + Итер, Неопределено);
			Результат.Счет.Добавить(Описание);
		КонецЕсли;
		Описание = Новый Структура("Имя,Синоним,Тип", "Субконто" + Итер, "Субконто" + Итер, Неопределено);
		Результат.Счет.Добавить(Описание);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти